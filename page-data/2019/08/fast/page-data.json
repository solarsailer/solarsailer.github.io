{"componentChunkName":"component---src-components-templates-post-template-js","path":"/2019/08/fast/","webpackCompilationHash":"3bc6000ff4ce6beb246f","result":{"data":{"site":{"siteMetadata":{"title":"Matthieu Oger","author":"Matthieu Oger","description":"I am a product manager, developer and designer from France. Co-founder of Pixelnest Studio.","siteUrl":"https://matthieuoger.com"}},"markdownRemark":{"html":"<p>Craig Mod in “<a href=\"https://craigmod.com/essays/fast_software/\">Fast Software, the Best Software</a>”:</p>\n<blockquote>\n<p>I <em>love</em> fast software. That is, software speedy both in function and interface. Software with minimal to no lag between wanting to activate or manipulate something and the thing happening. Lightness.</p>\n<p>Software that’s speedy usually means it’s focused. Like a good tool, it often means that it’s simple, but that’s not necessarily true. Speed in software is probably the most valuable, least valued asset. To me, speedy software is the difference between an application smoothly integrating into your life, and one called upon with great reluctance.</p>\n<p>[…] Because — it’s not <em>quite</em> as fast. We’re talking milliseconds, but it’s enough that you <em>feel</em> the difference.</p>\n<p>[…] Still, the slowness feels indicative of unseen rot on the inside of the machine. The slowness is like an off smell. I don’t trust the application as much as I would if it didn’t slow down […]</p>\n<p>Speed and reliability are often intuited hand-in-hand. Speed can be a good proxy for general engineering quality. If an application slows down on simple tasks, then it can mean the engineers aren’t obsessive detail sticklers. Not always, but it can mean disastrous other issues lurk. I want all my craftspeople to stickle.</p>\n<p>[…] I love software that does this: Software that unbloats over time. This should be the goal of all software. The longer it’s around, the more elegant it should become. Smooth over like a river stone.</p>\n<p>[…] But why is slow bad? Fast software is not always good software, but slow software is rarely able to rise to greatness. Fast software gives the user a chance to “meld” with its toolset. That is, not break flow.</p>\n<p>[…] It feels — intuitively — that software (beyond core functionality) should aim for speed. Speed as a proxy for efficiency. […]</p>\n<p><em>Ultimately, to be fast is to be light.</em></p>\n</blockquote>\n<p>He's talking about software — where it's most perceptible —, but I think this could also be easily applied to physical objects.</p>\n<hr>\n<p>As an aparté, but similarly, Craig also wrote this sentence that I like a lot in his <a href=\"https://craigmod.com/roden/028/\">latest Roden newsletter</a>:</p>\n<blockquote>\n<p>Part of me wishes there was more of a trend in the startup world to build sustainably small, single-serving, hyper-focused, <em>culturally-impactful</em> businesses.</p>\n</blockquote>\n<hr>\n<h2>Update <span class=\"more\">28 August 2019</span></h2>\n<p>Related to this topic, <a href=\"https://overcast.fm/+R7DVyEUt0/1:37:42\">John Siracusa</a> in <a href=\"https://atp.fm/episodes/337\">episode #337 of ATP</a>:</p>\n<blockquote class=\"transcript\">\n<p>That's what I want. I don't want to be waiting for the computer for things that I shouldn't have to be waiting for the computer for. For small interactive things. That involves, like, it's not saying \"oh yes, eliminate animations because it takes too long\". I just want everything to be interactive… all the time.</p>\n<p>I want it to be responsive to my input.</p>\n</blockquote>\n<p>This really is the crux of the problem. As soon as you start your actions and you have to stop because the software is not able to follow you, it's over (exhibit A: Jira, or as <a href=\"/sounds/posts/2019-08-01-fast/jira.mp3\">John's co-host says…</a>).</p>","frontmatter":{"date":"2019-08-01","readableDate":"01 August 2019","title":"Fast","showPageTitle":null,"excerptLine":null,"excerptQuote":{"name":"Craig Mod","quote":"I love fast software. That is, software speedy both in function and interface. […] To me, speedy software is the difference between an application smoothly integrating into your life, and one called upon with great reluctance. […] Ultimately, to be fast is to be light."}},"fields":{"path":"/2019/08/fast/"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"07858c61-028b-5a38-a14e-41ddd8afdfc5"}}}