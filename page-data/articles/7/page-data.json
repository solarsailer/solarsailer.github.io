{"componentChunkName":"component---src-components-templates-pagination-template-js","path":"/articles/7","webpackCompilationHash":"c793d433ab0adead5170","result":{"pageContext":{"isCreatedByStatefulCreatePages":false,"group":[{"node":{"id":"4d228f05-dab0-59cf-8d8d-fbd356d41857","frontmatter":{"path":null,"title":"Something Slightly Less Terrible","date":"2015-01-15","readableDate":"15 January 2015","redirectFrom":null,"excerpt":null,"excerptQuote":{"name":"Loren Brichter","quote":"The more I learn, the more terrible I think programming is. I’d love to rip everything up and start over."}},"fields":{"path":"/2015/01/something-slightly-less-terrible/","slug":"/2015/01/something-slightly-less-terrible/"},"html":"<p><a href=\"http://www.objc.io/issue-20/loren-brichter.html\">Fantastic interview of Loren Brichter on objc.io</a>:</p>\n<blockquote>\n<p>The more I learn, the more terrible I think programming is. I’d love to rip everything up and start over. But you can only swim against the tide so far, so it’s sometimes satisfying to sift through the garbage and repurpose terrible technologies to make something that is slightly less terrible. […]</p>\n<p>It’s not like a boat with a couple of holes that we can patch; it’s more like trying to sail across an ocean on a pile of accrued garbage. Sure, some of the stuff floats, and it keeps some other stuff from sinking. A better question might be: which parts are good? And you can only answer that if you look at a thing in isolation.</p>\n</blockquote>"}},{"node":{"id":"b43659df-ec02-5421-b640-31f671f4d2b9","frontmatter":{"path":null,"title":"A Tiny Game That You Can Play Forever","date":"2014-12-19","readableDate":"19 December 2014","redirectFrom":null,"excerpt":null,"excerptQuote":{"name":"Up Up Down Down","quote":"We then talk about the whimsical minimalism that works so well in indie games, and how to bring them to life. We talk about difficulty, complexity, and how to tune games."}},"fields":{"path":"/2014/12/a-tiny-game-that-you-can-play-forever/","slug":"/2014/12/a-tiny-game-that-you-can-play-forever/"},"html":"<p>The <a href=\"http://www.upup.fm/\">Up Up Down Down</a> podcast has a good episode with Asher Vollmer.</p>\n<p><a href=\"http://www.upup.fm/show/a-tiny-game-that-you-can-play-forever/\">A Tiny Game That You Can Play Forever</a>:</p>\n<blockquote>\n<p>Asher Vollmer, creator of Threes and Close Castles, joins us to talk puzzle games. We discuss the process of designing developing Threes, and what goes in to making a great little puzzle game. We then talk about the whimsical minimalism that works so well in indie games, and how to bring them to life. We talk about difficulty, complexity, and how to tune games. We touch on the effects of free to play on puzzle games, and how it makes us feel weird.</p>\n</blockquote>\n<p>There're some great points in there. It focuses a lot on Threes' gameplay and evolutions and dives a bit more into minimalism in games.</p>"}},{"node":{"id":"93b71f6a-9239-5a25-b2fa-846110119e87","frontmatter":{"path":null,"title":"Taking a Break","date":"2014-08-01","readableDate":"01 August 2014","redirectFrom":null,"excerpt":"A common good practice recommended by almost any home-worker is to take a quick (3 minutes) <em>walking</em> break every 45 minutes or so.","excerptQuote":null},"fields":{"path":"/2014/08/taking-a-break/","slug":"/2014/08/taking-a-break/"},"html":"<p>I'm self-employed and I work every day at home for my company, <a href=\"https://pixelnest.io\">Pixelnest Studio</a>.</p>\n<p>A common good practice recommended by almost any home-worker is to take a quick (3 minutes) <em>walking</em> break every 45 minutes or so.</p>\n<ol>\n<li>It makes you move your body. Especially your legs and your back.</li>\n<li>It gets you out of your computer.</li>\n<li>It rests your eyes. Try to fix an object at 15m and blink your eyes a few times. It's a good way to not only use your close-sight during work.</li>\n</ol>\n<p>It's a simple habit, but it's hard to get used to it. For the last weeks, I forced myself to walk for 3 minutes every 1 hour of work.</p>\n<p>And… it's great. I'm really feeling much more concentrated and ready.</p>\n<p>Because I will forget to stand up as soon as I'm working, <a href=\"https://gist.github.com/solarsailer/6328415616b485ff7bef\">I've made a little \"app\" for OSX</a>. In fact, it's just a simple automator app that will trigger a notification for three minutes. Follow the gist above to know how to use it. It's dead simple, but <strong>it works</strong>.</p>\n<hr>\n<p>NB: this advice is especially true for self-employed people (because you can't take a break with your coworkers), but anybody working at a desk for several hours should do it. It costs nothing, and your body will love it.</p>"}},{"node":{"id":"5c72efbc-88ad-5d0a-aa07-1450c573bb21","frontmatter":{"path":null,"title":"Design Detail in iOS 8 Messages","date":"2014-06-03","readableDate":"03 June 2014","redirectFrom":null,"excerpt":"One of the features that I wanted the most in iOS 8 was simple: Add a “Use Last Photo Taken” button in the Messages app.","excerptQuote":null},"fields":{"path":"/2014/06/design-detail-ios8-messages/","slug":"/2014/06/design-detail-ios8-messages/"},"html":"<p>One of the features that I wanted the most in iOS 8 was simple: add a <em>“Use Last Photo Taken”</em> button in the Messages app (along with the current \"Take Photo or Video\" and \"Choose Existing\").</p>\n<hr>\n<p>The idea was originally thought by <a href=\"http://mrgan.tumblr.com/post/12808983893/tweetbot-adds-last-photo-taken-feature\">Neven Mrgan</a> and later adopted by a lot of apps (Tweetbot, Slack, Droplr, etc.).</p>\n<figure>\n    <img\n    src=\"/images/posts/2014-06-03-picker-tweetbot.png\"\n    alt=\"Use “Last Photo Taken” in the Image Picker of Tweetbot 3\"\n    title=\"Use “Last Photo Taken”\"\n  >\n  <figcaption>Example: the Image Picker from Tweetbot 3.</figcaption>\n</figure>\n<p>But it was still missing in the one place where it would definitely shine: Messages.</p>\n<p><strong>No more.</strong></p>\n<hr>\n<p>The way it was added is brilliant. It's so simple that I don't know why it hasn't been done already (it might, I just don't know of an app that have done that).</p>\n<p>Here it is:</p>\n<figure>\n  <img\n    src=\"/images/posts/2014-06-03-picker-8.png\"\n    alt=\"Image Picker in iOS 8 Messages app\"\n    title=\"iOS 8 Messages\"\n  >\n  <figcaption>It's not a button. It's a grid of three (or more) images.</figcaption>\n</figure>\n<p>It solves three problems:</p>\n<ol>\n<li>You can use the last photo. 80% of the time, it's what you (and I) want to do.</li>\n<li>\n<p>You can see the last photo and be sure of what you are doing <strong>BEFORE</strong> doing it.</p>\n<p>With a button, the app had to provide a way to check the action.</p>\n<p>In Tweetbot, for example, the compose view shows a small thumbnail of the image.</p>\n<p>In Droplr, it's too late. As soon as you tap the button, the photo is uploaded and you have to delete it to fix your error.</p>\n</li>\n<li>You can use the last few photos too. Which might represent 80% of the last remaining use cases.</li>\n</ol>\n<p>It's so simple and clever that once you have seen it, you can only think: <em>\"Of course.\"</em>.</p>"}},{"node":{"id":"631e36d3-e3b6-5b02-87c3-9249e69a4ee5","frontmatter":{"path":null,"title":"How Netflix Reverse Engineered Hollywood","date":"2014-01-07","readableDate":"07 January 2014","redirectFrom":null,"excerpt":null,"excerptQuote":{"name":"Alexis Madrigal","quote":"We discovered that Netflix possesses not several hundred genres, or even several thousand, but 76,897 unique ways to describe types of movies."}},"fields":{"path":"/2014/01/how-netflix-reverse-engineered-hollywood/","slug":"/2014/01/how-netflix-reverse-engineered-hollywood/"},"html":"<p><a href=\"http://www.theatlantic.com/technology/archive/2014/01/how-netflix-reverse-engineered-hollywood/282679/\">Alexis Madrigal on Netflix classification</a>:</p>\n<blockquote>\n<p>[…], we discovered that Netflix possesses not several hundred genres, or even several thousand, <strong>but 76,897 unique ways to describe types of movies</strong>. […]</p>\n<p>Using large teams of people specially trained to watch movies, Netflix deconstructed Hollywood. They paid people to watch films and tag them with all kinds of metadata. This process is so sophisticated and precise that taggers receive a 36-page training document that teaches them how to rate movies on their sexually suggestive content, goriness, romance levels, and even narrative elements like plot conclusiveness. […]</p>\n<p>The Netflix Quantum Theory doc spelled out ways of tagging movie endings, the \"social acceptability\" of lead characters, and dozens of other facets of a movie. Many values are \"scalar,\" that is to say, they go from 1 to 5. So, every movie gets a romance rating, not just the ones labeled \"romantic\" in the personalized genres. Every movie's ending is rated from happy to sad, passing through ambiguous. Every plot is tagged. Lead characters' jobs are tagged. Movie locations are tagged. Everything. Everyone.</p>\n<p>That's the data at the base of the pyramid. It is the basis for creating all the altgenres that I scraped. Netflix's engineers took the microtags and created a syntax for the genres, much of which we were able to reproduce in our generator.</p>\n</blockquote>\n<p><small>(Emphasis mine)</small></p>\n<p>This article completely blew my mind. Great journalism.</p>\n<p>The idea to tag any movie that much and create ultra-specific subgenres is so clever. Hell of a work too.</p>\n<hr>\n<p>Concerning the <em>Perry Mason</em> mystery, I found an interesting <a href=\"http://www.theatlantic.com/technology/archive/2014/01/how-netflix-reverse-engineered-hollywood/282679/#comment-1184453715\">explanation</a> in the comments (yep):</p>\n<blockquote>\n<p>Actually, Alexis, I am baffled by your conclusion that the Perry Mason Mystery is a \"ghost in the machine\".</p>\n<p>To me it seems obvious: there is a subgenre, \"Understated Cerebral Mysteries with Ironclad Plots, Good Dialogue, Not Much Action or Romance, and on the Side of the Defense\", that is popular with viewers yet <em>drastically</em> underpopulated. It's so drastically underpopulated that the show that's a best-fit for the category is <em>enormously</em> popular, much more popular than anyone realized.</p>\n<p>Far from being a \"bug\", this is programming <em>platinum</em> for Netflix. If they're as smart as I think they are, this is the subgenre where they should be looking to make a TV series. The biggest problem will be finding a showrunner and scriptwriters who are able to go against so many of Hollywood's cliches and assumptions. They need to make something where what is visually interesting, striking, or exciting is unimportant, but where there are no holes in the plots. Very high degree of difficulty, and only profitable to Netflix, which makes money from its shows, not from the advertising.</p>\n</blockquote>\n<p>Sounds a bit like <a href=\"http://www.imdb.com/title/tt1475582/?ref_=fn_al_tt_1\">Sherlock</a>, no?</p>"}},{"node":{"id":"21665957-cecf-54e3-b2a1-5f12d90c492a","frontmatter":{"path":null,"title":"Unity 2D tutorial","date":"2013-11-21","readableDate":"21 November 2013","redirectFrom":null,"excerpt":"We cooked a complete tutorial about Unity and its new 2D tools. This tutorial covers the creation of a very small game from start to finish.","excerptQuote":null},"fields":{"path":"/2013/11/unity-2d-tutorial/","slug":"/2013/11/unity-2d-tutorial/"},"html":"<p>During the last weeks, we (<a href=\"https://dmayance.com/\">Damien</a> and I) have cooked a complete tutorial about Unity and its new 2D tools. This tutorial covers the creation of a very small game from start to finish.</p>\n<p>We hope you will enjoy it.</p>\n<p>→ <a href=\"https://pixelnest.io/tutorials/2d-game-unity/\">You can read it here</a>.</p>"}},{"node":{"id":"2a425062-6ab1-55d6-95ee-edb235c665e5","frontmatter":{"path":null,"title":"How Designers Destroyed the World","date":"2013-10-22","readableDate":"22 October 2013","redirectFrom":null,"excerpt":null,"excerptQuote":{"name":"Mike Monteiro","quote":"There are professions more harmful than (industrial) design, but only a very few of them."}},"fields":{"path":"/2013/10/how-designers-destroyed-the-world/","slug":"/2013/10/how-designers-destroyed-the-world/"},"html":"<p>Better late than never; I've managed to watch “<a href=\"https://vimeo.com/68470326\">How Designers Destroyed The World</a>” by Mike Monteiro.</p>\n<p>It's a great talk except that I'm not fond of the tone. Though it fits well with the content, I find it a bit overdramatic. The end is also a tad lengthy, which is unfortunate.</p>\n<p>Otherwise, I liked what I heard. <em>Which makes me consider…</em></p>\n<p>Regularly, I find myself stuck with incredibly ill-conceived things that frustrate me. These objects, rules or designs are things as simple as an ATM, a software or a door. They make us loose time, or worse, do (severe) mistakes.</p>\n<p>For example: there is a crossroad near my parents house. A few years ago, the mayor decided to remove the road signs at this place AND to not replace it. In France, there is an implicit rule which states that when there are no signs, you have to let the cars at your right cross the junction first. This rule is stupid. <strong>When you drive, you have no time to doubt</strong>. A sign serves primarily as way to convey a danger or a rule, without making you think. You know what you have to do instantly. <em>If you see a stop sign, you stop</em>. That is all.</p>\n<p>This implicit rule makes us do the contrary. At a junction like the one I talked about before, you see nothing, so you have to think, analyze and react. It's easy to have a (minor) car accident there. Moreover, people of my town had used this junction for years, knowing precisely how to react. But now, the priority rule has changed, and it's a mess. The result? In the best case, everybody stop, wait for 10 seconds to analyze the place and then drive.</p>\n<p><strong>This is a result of a design decision. Someone decided to do that.</strong> In this case, someone decided to break something that worked well for all this time.</p>\n<p>Sometimes, it might just be a dumb design that put you in an embarrassing situation. If you are a man, just remember the last time you have used a flat and too-high urinal. :)</p>\n<p>When I talk about that with some of my friends, they think that I'm excessively demanding and that the problem is me. Perhaps.</p>\n<p>I will conclude with a quote from the talk:</p>\n<blockquote class=\"transcript\">\n<p>There are professions more harmful than (industrial) design, <strong>but only a very few of them.</strong></p>\n</blockquote>"}},{"node":{"id":"cf92fe08-16d0-580d-9491-b4522af4fe19","frontmatter":{"path":null,"title":"You Must Prototype It in Code","date":"2013-10-18","readableDate":"18 October 2013","redirectFrom":null,"excerpt":null,"excerptQuote":{"name":"Jeff Atwood","quote":"The most destructive symptom of over-planning is the wrongheaded idea that being a Software Architect™ means drawing a lot of UML diagrams and handing them off to a group of developers. […] You can't architect a real world application on a whiteboard. You must prototype it in code to gather data on the performance and design implications of the choices you are making."}},"fields":{"path":"/2013/10/you-must-prototype-it-in-code/","slug":"/2013/10/you-must-prototype-it-in-code/"},"html":"<p>Jeff Atwood in <a href=\"http://www.codinghorror.com/blog/2004/11/good-programmers-get-off-their-butts.html\">Good Programmers Get Off Their Butts</a>:</p>\n<blockquote>\n<p>I am not proposing a code-like-hell methodology. I am merely observing that, in my experience, <strong>coding without planning is just as futile as coding with too much planning</strong>. Software development is <a href=\"http://www.codinghorror.com/blog/archives/000071.html\">a wicked problem</a>; you should never make planning decisions without some kind of code prototype to ensure that you're making informed decisions. If you plan too far ahead of the code, I guarantee you are doing work that will be thrown away or altered until it is unrecognizable.</p>\n<p>The most destructive symptom of over-planning is the wrongheaded idea that being a Software Architect™ means drawing a lot of UML diagrams and handing them off to a group of developers in Bangalore. <strong>UML is great if you don't want to do any work; you just draw pictures of what it would look like if work was actually done</strong>. This is not only borderline laziness, it's also a recipe for disaster. You can't architect a real world application on a whiteboard. You must prototype it in code to gather data on the performance and design implications of the choices you are making.</p>\n</blockquote>"}},{"node":{"id":"e750d5aa-258c-5dfc-958a-acc39e889bff","frontmatter":{"path":null,"title":"Paying for Softwares","date":"2013-09-30","readableDate":"30 September 2013","redirectFrom":null,"excerpt":null,"excerptQuote":{"name":"Florian Kugler","quote":"[People] might say otherwise when asked about, but their actions speak pretty clearly: A cup of coffee is worth more than almost every app on the store. That's a hard pill to swallow, but we should let it sink in. We pour all our creativity, time, and passion into creating basically worthless products."}},"fields":{"path":"/2013/09/paying-for-softwares/","slug":"/2013/09/paying-for-softwares/"},"html":"<p>Florian Kugler about mobile apps in <a href=\"http://floriankugler.com/blog/2013/9/30/worth-less-than-a-cup-of-coffee\">Worth Less than a Cup of Coffee</a>:</p>\n<blockquote>\n<p>[People] might say otherwise when asked about, but their actions speak pretty clearly: A cup of coffee is worth more than almost every app on the store.</p>\n<p>That's a hard pill to swallow, but we should let it sink in. We pour all our creativity, time, and passion into creating basically worthless products.</p>\n</blockquote>\n<p>Recent events and the backlash <a href=\"http://realmacsoftware.com/blog/some-changes-for-clear\">against Realmac with Clear for iOS 7</a> are sad.</p>\n<p>People don't understand that creating softwares — <strong>truly</strong> good softwares that sweat every detail — takes a lot of time and money. Ironically, even a lot of developers who work in big companies don't want to pay for softwares.</p>\n<p>The mobile apps markets have made this situation worse.</p>\n<p>I'm currently thinking back about the mobile market, especially for games. At a time, I thought that going mobile-only was the best shot today, but the more I think about it, the more I'm realizing that a platform like Steam (which also drives the prices to the bottom, alas) is more sustainable for a developer/company.</p>\n<p><a href=\"http://www.marco.org/2013/09/28/underscore-price-dynamics\">Marco Arment</a> said in its latest blog post: <em>\"Paid-up-front iOS apps had a great run, but it’s over. Time to make other plans.\"</em>.</p>\n<p>So what does that leave? Freemium? Unfortunately, freemium almost always goes with <a href=\"https://itunes.apple.com/fr/app/candy-crush-saga/id553834731?mt=8\">bad apps or games that trick users to pay for more</a>.</p>\n<p>N.B.: To be clear, as a user, I'm happy to <em>pay less</em>. For almost everybody, a software or a game at 50-100$ is way too high, and that's fine. What I don't like is that we are now in a situation where  even one buck for an app you use daily is too much. <strong>One buck per app cannot sustain a one-person business.</strong></p>"}}],"pathPrefix":"articles","first":false,"last":false,"index":7,"pageCount":10,"additionalContext":{}}}}