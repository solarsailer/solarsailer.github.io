{"componentChunkName":"component---src-components-templates-pagination-template-js","path":"/articles/3","webpackCompilationHash":"c793d433ab0adead5170","result":{"pageContext":{"isCreatedByStatefulCreatePages":false,"group":[{"node":{"id":"ef599b22-7479-5c0e-b385-c6409d837471","frontmatter":{"path":null,"title":"Japan Pizza Culture","date":"2020-01-22","readableDate":"22 January 2020","redirectFrom":null,"excerpt":null,"excerptQuote":{"name":"Someone from the Associazione Verace Pizza Napoletana","quote":"Don’t tell anyone I told you this, but the Japanese are making better pizzas than we are."}},"fields":{"path":"/2020/01/japan-pizza-culture/","slug":"/2020/01/japan-pizza-culture/"},"html":"<p>Matt Goulding in “<a href=\"https://medium.com/airbnbmag/slice-of-tokyo-how-japan-became-a-pizza-hotspot-f734d834168\">Slice of Tokyo: How Japan Became a Pizza Hotspot</a>”:</p>\n<blockquote>\n<p>After passing my final exam before a panel of Naples’ old guard of pizzamakers, I asked the judges who else, besides the Italians, were making good pizzas. Most just smirked and ignored the question, as if it had no reasonable answer. But one of the older gentlemen waited until the conversation moved on before waving me in close:</p>\n<p>“Don’t tell anyone I told you this, but the Japanese are making better pizzas than we are.”</p>\n</blockquote>\n<p>I had, indeed, a wonderful Margherita at Seirinkan while I was in Tokyo three years ago.</p>\n<hr>\n<p>Related, from one of my favorite essays by Craig Mod on the same subject, “<a href=\"https://www.eater.com/2017/2/21/14670944/best-pizza-tokyo-guide\">Tokyo Neapolitan: The New Wave of Japanese Pizza</a>”:</p>\n<blockquote>\n<p>“Pizza shops are not quite like bakeries, not quite like restaurants — everything comes together in a single moment; 60 seconds determine the success or failure of a meal.”</p>\n<p>[…]</p>\n<p>It turns out the decision to pre-cut a pizza comes with its own philosophical underpinnings</p>\n<p>Inoue believes that because a pizza is not perfectly symmetrical in terms of ingredient distribution, each slice is inevitably a little different; there's no way to cut a pizza in a way that  perfectly captures its entire essence in a single slice. His ideal is for one person to eat an entire pie on their own, ensuring they experience the full spectrum of flavors.</p>\n</blockquote>\n<hr>\n<p>And also slightly related, a more recent one by the same Craig Mod: “<a href=\"https://www.eater.com/2019/12/16/21003452/japan-kissaten-traditional-cafes-pizza-toast-travel\">I Walked 600 Miles Across Japan for Pizza Toast</a>”.</p>"}},{"node":{"id":"cee8bef2-31d1-5c42-9000-47730f5a828c","frontmatter":{"path":null,"title":"Speaking Interface","date":"2019-11-15","readableDate":"15 November 2019","redirectFrom":null,"excerpt":null,"excerptQuote":{"name":"Erik D. Kennedy","quote":"To understand that, you just need to be able to speak interface. And that’s the craziest thing to me. Interface fluency is something anyone can achieve."}},"fields":{"path":"/2019/11/speaking-interface/","slug":"/2019/11/speaking-interface/"},"html":"<p><a href=\"https://learnui.design/blog/4-rules-intuitive-ux.html\">Erik D. Kennedy</a>:</p>\n<blockquote>\n<p>Now, my clients weren’t <em>this</em> bad, but look  —  you don’t need to be Bret Victor to understand that if you can only select ONE thing from a list, you need RADIO BUTTONS, not checkboxes. To understand <em>that</em>, you just need to be able to <em><strong>speak interface</strong></em>. And that’s the craziest thing to me. Interface fluency is something <em>anyone</em> can achieve. You don’t need college, you don’t need Lambda school, yadda yadda.</p>\n<p>Frankly, you just need the <strong>presence of mind</strong> to (A) pause every single time you’re confused or frustrated by some app, (B) verbalize <em>what</em> about the interface makes you confused/frustrated/etc., and then (C) figure out how you could avoid that specific snafu in your own designs.</p>\n</blockquote>\n<p>A million times, <strong>yes</strong>.</p>"}},{"node":{"id":"adfee9e1-ec8e-5421-b96d-c477bec1ca91","frontmatter":{"path":null,"title":"Singapore","date":"2019-11-06","readableDate":"06 November 2019","redirectFrom":null,"excerpt":"I had the chance to go to Singapore twice recently. The city is really incredible — it's full of surprises, with gigantic skyscrapers, mind-blowing structures and some ancient places hidden inside the districts.","excerptQuote":null},"fields":{"path":"/2019/11/singapore/","slug":"/2019/11/singapore/"},"html":"<p>I had the chance to go to Singapore twice recently. The first time was in June for one week, and the second time in the last two weeks. It was for work, but all in all, I still had almost 3 full week-ends to discover the city properly.</p>\n<p><strong>Singapore is really incredible</strong>. It's full of surprises, with gigantic skyscrapers, mind-blowing structures and some ancient places hidden inside the districts (although not as frequently as what you can find in Japan, for example).</p>\n<p>It mixes many asian cultures. The official language is English, but many others are spoken everywhere (chinese, indian, malay, indonesian, etc.). Food is available in abundance and diversity<sup id=\"fnref-1\"><a href=\"#fn-1\" class=\"footnote-ref\">1</a></sup>. The city is really busy during the day (a lot less at night in my opinion), and everything seems to change quite often (eg. governement and companies are not afraid to tear down a building to build another one 10 years later). Men presence is omnipresent: new lands are created on the sea, and nature is tightly contained. It's fascinating, even though the country is an environmental aberration (overuse of air conditioning, for example).</p>\n<p>There's no season, and it's always the same weather: 28-32°C (probably around 40°C felt), warm, <em>extremely humid</em>, and cloudy with occasional rains or thunderstorms. Even at night (which starts around 19:30), it will still be warm (just 2-3°C cooler if you are lucky). You could be in short and t-shirt all year, and if you stay 30 min outside, you'll inevitably sweat.</p>\n<p>There are tunnels and malls everywhere, so if you want to avoid the heat, you just have to go inside a building to cool down<sup id=\"fnref-2\"><a href=\"#fn-2\" class=\"footnote-ref\">2</a></sup>, \"thanks to\" the overabondance of AC<sup id=\"fnref-3\"><a href=\"#fn-3\" class=\"footnote-ref\">3</a></sup>.</p>\n<p>Finally, Singapore is really, <strong>really</strong>, safe. As a man, I don't feel unsafe most of the time, but still, you can feel the difference there. It can be 3:00 at night and you'll never feel threatened. You can forget something and go back one day later and find it again. It's when you go back home that you can really grasp how nice it is to walk so peacefully.</p>\n<h2>Tips</h2>\n<ul>\n<li>Foodcourts (gathering of stalls serving a few different meals each) are everywhere. Some of them can be a bit dodgy — you will have a rating on each stall, from C to A. From what I've understood, even a A is not necessarily clean. However, I never got sick (but I never tried a C either).</li>\n<li>Grab a tourist SIM at the airport (you'll need your passport as a foreigner). For a cheap 12 SGD (~8 EUR), you'll get 100GB of data for 7 days. <a href=\"https://www.m1.com.sg/Mobile/prepaid-plans/tourist-sim\">I recommend the M1 plans</a> - for iPhone users, you can also get one as an eSim.</li>\n<li>You can manage without cash, but still, I would recommend to withdraw 20-40 SGD for a week to eat in the cheap foodcourts (many of them don't accept credit cards). As a Singaporean, I don't think it's as necessary thanks to other types of payments (like <a href=\"https://www.nets.com.sg\">Nets</a>), but for a tourist, you'll find yourself blocked if you don't have a little bit of cash. This is a surprise, because there are <strong>so many</strong> payment methods available everywhere.</li>\n<li>You don't need to buy city transport tickets (subway or bus). Just use your contactless credit card at the entries and exits, and you'll be debited at the end of the month (or week, I don't really know) automatically. This is so handy.</li>\n<li>Taxis are cheap. Going from the airport to the city center is like 20 SGD (14 EUR). In some places, you'll find one really easily, but it's not always the case at certain moments of the day. There are some applications to do that, but it seemed a bit of a pain to use as a foreigner.</li>\n<li>Restaurants don't show the final prices in the menus. You'll have to add some taxes at the end (I would say around 15%-20%). I'm not sure it's everywhere, but it happens often.</li>\n<li>I never tipped for anything. I didn't feel like I was supposed to. Which is nice<sup id=\"fnref-4\"><a href=\"#fn-4\" class=\"footnote-ref\">4</a></sup>.</li>\n<li>Meals can vary a lot in price. In the foodcourts, you can usually find something around 4 SGD (2.5 EUR). In \"normal\" restaurants, it's more around 15-25 SGD. But it can also be way higher.</li>\n<li>The Singaporean Dollar is very interesting for us Europeans (1 SGD is around 0.66 EUR). It reduces the costs significantly at the time of this writing. Life is not cheap in Singapore, so this helps.</li>\n<li>Buy some Tiger Balms. You can find the white and red for 3-5 SGD (2-3 EUR) each. Which is 4-5 times cheaper than in France.</li>\n</ul>\n<h2>Places</h2>\n<p>Some places I went to:</p>\n<ul>\n<li><strong>Marina Bay Sands</strong>: the 3-towers skyscraper with a \"boat\" at the top, and probably the most famous building in Singapore. I went to \"Cé La Vi\" rooftop, which has a nice view on Gardens By The Bay. Go to the mall nearby (The Shoppe at Marina Bay Sands) to climb to the Skydeck and watch the light show during the evening. The ArtScience Museum is a pretty building too.</li>\n<li><strong>Buddha Tooth Relic Temple</strong>: a brand new Buddhist temple that does not look new. The interior is really nice, and there's an interesting museum inside.</li>\n<li><strong>Chinatown</strong>: very nice neighbourhood with lots of restaurants, close to the previous temple.</li>\n<li><strong>Thian Hock Keng Temple</strong>: this temple is surrounded by skyscrapers in a moody district to walk in.</li>\n<li><strong>Gardens By The Bay</strong>: a park near the CBD, with artificial supertrees (the skyway at the top of the tree gives a nice view around) and two domes to visit. I really love this place. It's unique. There's also a great foodcourt in the park called \"Satay By The Bay\".</li>\n<li><strong>Jewel</strong>: it's an artificial park in the center of the airport. They built a huge fountain coming from the ceiling… it's crazy and superb at the same time.</li>\n<li><strong>Zoo</strong>: I wouldn't recommend this. My trip and safaris in Tanzania have probably destroyed any interest I could have in a zoo.</li>\n<li><strong>Haw Par Villa</strong>: it's a bit outside the city center. It was designed by the family who invented the Tiger Balm onguent. Creepy as hell<sup id=\"fnref-5\"><a href=\"#fn-5\" class=\"footnote-ref\">5</a></sup>, but worth a visit.</li>\n<li><strong>Botanic Gardens</strong>: a big park loved by Singopereans and families. It's ok.</li>\n<li><strong>Southern Ridges</strong>: a long walk in the south of the city. I started from Kent Ridges until the Harbourfront MRT station. The section between Kent Ridges to Alexandra Arch is boring. The part after Henderson Waves (to the MRT station) is not interesting either. <em>But from Alexandra Arch (included) and Henderson Waves (included), it's really great.</em></li>\n<li><strong>CBD</strong> and <strong>Lau Pau Sat</strong>: a famous foodcourt in the CBD (Central Business District), surrounded by high towers and business(wo)men.</li>\n<li><strong>1-Altitude</strong>: one of the highest tower with a rooftop. Panoramic view of Singapore.</li>\n</ul>\n<p>There are many other places I still need to do (Little India, Pulau Ubin, a few temples, MacRichie, etc.). And I still didn't try a Kaya toast breakfast… That will be for another time!</p>\n<div class=\"footnotes\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<p>Just try a Chicken Rice or black or white Chai Tow Kway (Carrot Cake) if you want something \"typical\".</p>\n<a href=\"#fnref-1\" class=\"footnote-backref\">↩</a>\n</li>\n<li id=\"fn-2\">\n<p>In an interesting way, I would compare the city to Montréal during the winter - you can navigate almost exclusively in man-built structure to avoid the harsh weather, but in Singapore, it will be from the heat, not the cold and snow. And all year, not just the winter.</p>\n<a href=\"#fnref-2\" class=\"footnote-backref\">↩</a>\n</li>\n<li id=\"fn-3\">\n<p>It often happens that it will be <strong>too</strong> cold inside buildings.</p>\n<p>  It's also <a href=\"https://www.vox.com/2015/3/23/8278085/singapore-lee-kuan-yew-air-conditioning\">probably one of the reasons</a> behind the economical success of the country:</p>\n<blockquote>\n<p><strong>ITV</strong>: Anything else besides multicultural tolerance that enabled Singapore's success?</p>\n<p><strong>Lee Kuan Yew</strong>: Air conditioning. Air conditioning was a most important invention for us, perhaps one of the signal inventions of history. It changed the nature of civilization by making development possible in the tropics.</p>\n<p>Without air conditioning you can work only in the cool early-morning hours or at dusk. The first thing I did upon becoming prime minister was to install air conditioners in buildings where the civil service worked. This was key to public efficiency.</p>\n</blockquote>\n<a href=\"#fnref-3\" class=\"footnote-backref\">↩</a>\n</li>\n<li id=\"fn-4\">\n<p>Tipping is such a stupid custom. The sole purpose is to not pay the employees correctly by default. Include the cost of the salaries in the f* price, and boom, done. Period.</p>\n<a href=\"#fnref-4\" class=\"footnote-backref\">↩</a>\n</li>\n<li id=\"fn-5\">\n<p>There's actually a Hell Museum inside, btw.</p>\n<a href=\"#fnref-5\" class=\"footnote-backref\">↩</a>\n</li>\n</ol>\n</div>"}},{"node":{"id":"acc59ab6-b91b-5b7f-92c4-ecbde514f8c9","frontmatter":{"path":null,"title":"Nice, Clear and… Secure","date":"2019-10-13","readableDate":"13 October 2019","redirectFrom":null,"excerpt":null,"excerptQuote":{"name":"Federico Viticci","quote":"For security to be effective, it needs to be used, and for good security practices to be used, they need to be nice, they need to be elegant, they need to be clear."}},"fields":{"path":"/2019/10/nice-clear-and-secure/","slug":"/2019/10/nice-clear-and-secure/"},"html":"<p><a href=\"https://www.relay.fm/connected/264/\">Federico Viticci</a>:</p>\n<blockquote class=\"transcript\">\n<p>So security, obviously, and authentication, these are complicated topics, and they are complicated to engineer, they are complicated to explain. But I think, for security to be effective, and maybe this sounds a little too simplistic but bear with me.</p>\n<p><strong>For security to be effective, it needs to be used, and for good security practices to be used, they need to be nice, they need to be elegant, they need to be clear.</strong></p>\n<p>[…]</p>\n<p>If you are a security engineer, you are gonna say \"who cares about being nice, it needs to be secure\", yes! <em>It also needs to be nice!</em> […] You need to understand that being nice is just as important as being secure, because if it's not a nice experience, people are just not gonna care and they are not gonna use it, and they are just gonna click \"OK\" and they are not gonna know what it means. So, is it really more secure… if it's not nice?</p>\n</blockquote>"}},{"node":{"id":"30201edc-fc48-55c2-8a20-568e3f9d7ac3","frontmatter":{"path":null,"title":"Software Disenchantment","date":"2019-09-29","readableDate":"29 September 2019","redirectFrom":null,"excerpt":null,"excerptQuote":{"name":"Nikita","quote":"So everything is just a pile of barely working code added on top of previously written barely working code. It keeps growing in size and complexity, diminishing any chance for a change. To have a healthy ecosystem you need to go back and revisit. You need to occasionally throw stuff away and replace it with better stuff."}},"fields":{"path":"/2019/09/software-disenchantment/","slug":"/2019/09/software-disenchantment/"},"html":"<p>Nikita in “<a href=\"https://tonsky.me/blog/disenchantment/\">Software disenchantment</a>”:</p>\n<blockquote>\n<p>So everything is just a pile of barely working code added on top of previously written barely working code. It keeps growing in size and complexity, diminishing any chance for a change.</p>\n<p>To have a healthy ecosystem you <em>need</em> to go back and revisit. You <em>need</em> to occasionally throw stuff away and replace it with better stuff.</p>\n</blockquote>\n<p><small>See also: “<a href=\"https://matthieuoger.com/2015/10/sad-state-web-deployment/\">The Sad State Of Web App Deployment</a>” and “<a href=\"https://matthieuoger.com/2015/01/something-slightly-less-terrible/\">Something Slightly Less Terrible</a>”.</small></p>\n<hr>\n<p>I think the article is a bit short-sighted, and even wrong on some points: there's a difference between today's software and the one from 10 or 15 years ago — we <strong>do</strong> have progress. <em>But the overall sentiment is fundamentally correct.</em></p>\n<p>Something is broken, and that's probably because we are <a href=\"https://matthieuoger.com/2019/09/what-will-happen-to-code/\">still using code to build software</a>.</p>\n<p>There's also a slight contradiction when he says we need to delete code, but still need to be able to run things from twenty years ago. If we were more thoughtful with what we build, it could be possible, but to keep a sane and manageable codebase in our current world, we need to accept that we will lose compatibility and devices over time.<sup id=\"fnref-1\"><a href=\"#fn-1\" class=\"footnote-ref\">1</a></sup></p>\n<hr>\n<blockquote>\n<p>That is not engineering. That’s just lazy programming. Engineering is understanding performance, structure, limits of what you build, deeply. Combining poorly written stuff with more poorly written stuff goes strictly against that. To progress, we need to understand what and why are we doing.</p>\n</blockquote>\n<p>I'm also guilty of that. Look, this website uses <a href=\"https://www.gatsbyjs.org\">Gatsby</a> to generate a few static pages, and this requires 242M of dependencies to build it (not run it, hopefully).</p>\n<p>However, the result is extremely fast and satisfying for the user, and the developer experience is top-notch, at the expense of an increase in size of the exported bundle on initial (and uncached) load. Is this a reasonable tradeoff?</p>\n<hr>\n<p>At the end:</p>\n<blockquote>\n<p>Business won’t care. Neither will users. They are only learned to expect what we can provide. We (engineers) say every Android app takes 350 MB? Ok, they’ll live with that. We say we can’t give them smooth scrolling? Ok, they’ll live with a phone that stutter. We say “if it doesn’t work, reboot”? They’ll reboot. After all, they have no choice.</p>\n<p>There’s no competition either. Everybody is building the same slow, bloated, unreliable products. Occasional jump forward in quality does bring competitive advantage (iPhone/iOS vs other smartphones, Chrome vs other browsers) and forces everybody to regroup, but not for long.</p>\n<p>So it’s our mission as engineers to show the world what’s possible with today’s computers in terms of performance, reliability, quality, usability. If we care, people will learn. And there’s nobody but us to show them that it’s very much possible. If only we care.</p>\n</blockquote>\n<p>On this, I don't completely agree. Yes, in general, people are mostly stuck with what we provide, but users are way too forgiving, and most of the time, don't even see the quality problem<sup id=\"fnref-2\"><a href=\"#fn-2\" class=\"footnote-ref\">2</a></sup> — only a fraction perceives it.<sup id=\"fnref-3\"><a href=\"#fn-3\" class=\"footnote-ref\">3</a></sup> Even engineers working on products don't necessarily see that something's wrong. How many engineers don't care about design, visual consistency, coherence, and speed, for example?<sup id=\"fnref-4\"><a href=\"#fn-4\" class=\"footnote-ref\">4</a></sup> How many don't see that their users are struggling?</p>\n<p>But there's a choice to be made by users: choose carefully, invest and learn, accept to spend a bit more on something better and more durable, change less often, and don't restrict yourself to the most ugly and cheap solution all the time, just because that was the first and easy choice.</p>\n<div class=\"footnotes\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<p>That's a shame and such a waste, though. I don't know if we can do better with our current tools.</p>\n<a href=\"#fnref-1\" class=\"footnote-backref\">↩</a>\n</li>\n<li id=\"fn-2\">\n<p>Case in point: Windows is still a complete mess — the average bar of software quality on this platform is abysmal, and most people are completely okay with that — they don't even care. The only thing that raised the bar on Windows is Electron apps, and these came with their own set of tradeoffs, and are almost universally considered as subpar and second-tier citizens on other OSes. <em>It's a vicious cycle: if the platform owner doesn't care, the developers won't care, thus the users too.</em></p>\n<a href=\"#fnref-2\" class=\"footnote-backref\">↩</a>\n</li>\n<li id=\"fn-3\">\n<p>This, though, poses another question: should we care about high quality if it doesn't matter for 80% of the users? I do think we should and I'm happy we still have craftsmanship in this world, but maybe it's only us, designers and nerds, that spend too much time pondering about that.</p>\n<a href=\"#fnref-3\" class=\"footnote-backref\">↩</a>\n</li>\n<li id=\"fn-4\">\n<p>And it's a bit easy to say this without knowing the business constraints. Our society pushes for fast at the expense of doing things right and correctly — by <em>taking the time</em>. This gives us progress at an incredible and ruthless pace, but also a ton of waste.</p>\n<a href=\"#fnref-4\" class=\"footnote-backref\">↩</a>\n</li>\n</ol>\n</div>"}},{"node":{"id":"22f397b7-585b-5dbe-a771-d9b96087a79a","frontmatter":{"path":null,"title":"The Passing of Time, Caught in a Single Photo","date":"2019-09-23","readableDate":"23 September 2019","redirectFrom":null,"excerpt":null,"excerptQuote":{"name":"Stephen Wilkes","quote":"I build a photograph based on time. […] I realised that Day to Night is really a new way of seeing."}},"fields":{"path":"/2019/09/passing-of-time-in-a-photo/","slug":"/2019/09/passing-of-time-in-a-photo/"},"html":"<p>Stephen Wilkes in “<a href=\"https://youtu.be/afev0ZjAhUA\">The Passing of Time, Caught in a Single Photo</a>”:</p>\n<blockquote class=\"transcript\">\n<p>Einstein described time as a fabric. Think of the surface of a trampoline: it warps and stretches with gravity.</p>\n<p>I see time as a fabric as well, except I take that fabric and flatten it, compress it into a single plane. One of the unique aspects of this work is also, if you look at all my pictures, the time vector changes: sometimes I'll go left to right, sometimes front to back, up or down, even diagonally. I am exploring the space-time continuum within a two-dimensional still photograph.</p>\n<p>[…] I build a photograph based on time. […]</p>\n<p>I'm compressing the day and night as I saw it, creating a unique harmony between these two very discordant worlds.</p>\n<p>[…] Time is this extraordinary thing that we never can really wrap our heads around. But in a very unique and special way, I believe these photographs begin to put a face on time. They embody a new metaphysical visual reality. […]</p>\n<p><strong>I realised that Day to Night is really a new way of seeing.</strong></p>\n</blockquote>\n<hr>\n<blockquote class=\"transcript\">\n<p>I watched over 15 hours all these people not even look at Sacré-Coeur. They were more interested in using it as a backdrop. They would walk up, take a picture, and then walk away. And I found this to be an absolutely extraordinary example, a powerful disconnect between what we think the human experience is versus what the human experience is evolving into. <em>The act of sharing has suddenly become more important than the experience itself.</em></p>\n</blockquote>\n<hr>\n<blockquote class=\"transcript\">\n<p>[Near a watering hole in the Serengeti National Park in Tanzania] What I witnessed was unimaginable. Frankly, it was biblical. We saw, for 26 hours, all these competitive species share a single resource called water. The same resource that humanity is supposed to have wars over during the next 50 years. The animals never even grunted at each other. <em>They seem to understand something that we humans don't.</em> That this precious resource called water is something we all have <strong>to share</strong>.</p>\n</blockquote>"}},{"node":{"id":"f60a82b4-b879-5aab-9e57-7bd9d48522ca","frontmatter":{"path":null,"title":"What Will Happen to Code?","date":"2019-09-08","readableDate":"08 September 2019","redirectFrom":null,"excerpt":"Programmers are probably the only one that are actually eagerly trying to create the next-generation of tools that will replace them.","excerptQuote":null},"fields":{"path":"/2019/09/what-will-happen-to-code/","slug":"/2019/09/what-will-happen-to-code/"},"html":"<p>Pieter Levels in “<a href=\"https://levels.io/no-code/\">No Code</a>”:</p>\n<blockquote>\n<p>In the future writing actual code will be like using a pro DSLR camera, and no code will be like using a smartphone camera. Some pros will keep doing work with DSLRs (and need them), but most basic apps will be built with no code.</p>\n<p>[…]</p>\n<p>I think we'll see coding go in two directions:</p>\n<ol>\n<li>towards simplicity with no code, for 95-99% of apps</li>\n<li>towards complexity with custom high-level engineered code, for the 1-5% of apps</li>\n</ol>\n<p>The engineers working on (2) will be high paid, in the millions/year, because custom code.</p>\n</blockquote>\n<p>This is my theory as well. I'm pretty confident that in 20, maybe 40 years, nobody will write actual code for most use cases. We will still have craftsmen, that will build low-level libraries, OSes and computing bricks, then integrated by platforms that everybody will use. Gluing, mixing and combining APIs, UIs, sensors and any other tool will be as simple as piping commands in a shell for a developer today.</p>\n<p>Nowadays' coding is too dangerous, brittle, slow and painful to continue like that forever. It's still baffle me that forgetting brackets around a <code class=\"language-text\">if</code> statement can produce an extremely serious vulnerability issue, that can potentially impact everyone on earth.</p>\n<p>As long as we write code like we did 50 years ago, this will continue to be true. We will continue to make the same mistakes, we will continue to create bugs just by calling an API or rendering a few graphical elements on a screen. It's no wonder that the average quality of softwares is so low right now: <a href=\"https://matthieuoger.com/2015/01/something-slightly-less-terrible/\">considering the number of layers you have to take into account</a>, the pace of the industry, the requirements and the variety of environments, it's already impressive that humanity was able to go this far with such a primitive tooling — it's a giant effort and a long struggle to be able to create something of quality in the software virtual world.</p>\n<p>Surprisingly, and maybe hopefully, programmers are probably the only one that are actually eagerly trying to create the next-generation of tools that will replace them.</p>\n<p>It's been a long time that I've formed this opinion in my head, and these are the reasons that I choose to not focus entirely on programming for the last years, but instead on the products at a higher level.</p>\n<p>Software engineers will probably become like blacksmiths (or similar professions): a few are highly valued for <a href=\"https://youtu.be/TD2XGwmRJi8\">the quality of their work, and the dedication to their craft</a>, but the other 99% have vanished or been replaced by low-wage jobs.</p>"}},{"node":{"id":"2599cd11-3647-545e-b164-558ab0306dd3","frontmatter":{"path":null,"title":"Art of Lists","date":"2019-08-26","readableDate":"26 August 2019","redirectFrom":null,"excerpt":null,"excerptQuote":{"name":"Allen Pike","quote":"Occasionally we need to write something that must be understood, absorbed, and acted on. […] There is one core approach […], one workhorse of the skimmable document, that is worth mastering: lists."}},"fields":{"path":"/2019/08/art-of-lists/","slug":"/2019/08/art-of-lists/"},"html":"<p><a href=\"https://allenpike.com/2019/making-a-list-bold\">Allen Pike</a>:</p>\n<blockquote>\n<p>Occasionally we need to write something that must be understood, absorbed, and acted on. The more important it is that readers understand and act, the more time you should spend refining the writing.</p>\n<p>There are a lot of things you can do to make an email, blog post, proposal, or process document clearer. For example you can keep it short, make it engaging, or have a colleague refine it before sending it out. These can all help a lot.</p>\n<p>However, if it’s critical to you that your writing is read – especially by busy people – you need to make it skimmable.</p>\n<p>[…] There is one core approach though, one workhorse of the skimmable document, that is worth mastering: lists. […] I’d like to share one weird trick to quickly writing a clear and useful list: <a href=\"https://allenpike.com/2019/making-a-list-bold#the-bolding-trick\">The Bolding Trick</a>.</p>\n</blockquote>"}},{"node":{"id":"07858c61-028b-5a38-a14e-41ddd8afdfc5","frontmatter":{"path":null,"title":"Fast","date":"2019-08-01","readableDate":"01 August 2019","redirectFrom":null,"excerpt":null,"excerptQuote":{"name":"Craig Mod","quote":"I love fast software. That is, software speedy both in function and interface. […] To me, speedy software is the difference between an application smoothly integrating into your life, and one called upon with great reluctance. […] Ultimately, to be fast is to be light."}},"fields":{"path":"/2019/08/fast/","slug":"/2019/08/fast/"},"html":"<p>Craig Mod in “<a href=\"https://craigmod.com/essays/fast_software/\">Fast Software, the Best Software</a>”:</p>\n<blockquote>\n<p>I <em>love</em> fast software. That is, software speedy both in function and interface. Software with minimal to no lag between wanting to activate or manipulate something and the thing happening. Lightness.</p>\n<p>Software that’s speedy usually means it’s focused. Like a good tool, it often means that it’s simple, but that’s not necessarily true. Speed in software is probably the most valuable, least valued asset. To me, speedy software is the difference between an application smoothly integrating into your life, and one called upon with great reluctance.</p>\n<p>[…] Because — it’s not <em>quite</em> as fast. We’re talking milliseconds, but it’s enough that you <em>feel</em> the difference.</p>\n<p>[…] Still, the slowness feels indicative of unseen rot on the inside of the machine. The slowness is like an off smell. I don’t trust the application as much as I would if it didn’t slow down […]</p>\n<p>Speed and reliability are often intuited hand-in-hand. Speed can be a good proxy for general engineering quality. If an application slows down on simple tasks, then it can mean the engineers aren’t obsessive detail sticklers. Not always, but it can mean disastrous other issues lurk. I want all my craftspeople to stickle.</p>\n<p>[…] I love software that does this: Software that unbloats over time. This should be the goal of all software. The longer it’s around, the more elegant it should become. Smooth over like a river stone.</p>\n<p>[…] But why is slow bad? Fast software is not always good software, but slow software is rarely able to rise to greatness. Fast software gives the user a chance to “meld” with its toolset. That is, not break flow.</p>\n<p>[…] It feels — intuitively — that software (beyond core functionality) should aim for speed. Speed as a proxy for efficiency. […]</p>\n<p><em>Ultimately, to be fast is to be light.</em></p>\n</blockquote>\n<p>He's talking about software — where it's most perceptible —, but I think this could also be easily applied to physical objects.</p>\n<hr>\n<p>As an aparté, but similarly, Craig also wrote this sentence that I like a lot in his <a href=\"https://craigmod.com/roden/028/\">latest Roden newsletter</a>:</p>\n<blockquote>\n<p>Part of me wishes there was more of a trend in the startup world to build sustainably small, single-serving, hyper-focused, <em>culturally-impactful</em> businesses.</p>\n</blockquote>\n<hr>\n<h2>Update <span class=\"more\">28 August 2019</span></h2>\n<p>Related to this topic, <a href=\"https://overcast.fm/+R7DVyEUt0/1:37:42\">John Siracusa</a> in <a href=\"https://atp.fm/episodes/337\">episode #337 of ATP</a>:</p>\n<blockquote class=\"transcript\">\n<p>That's what I want. I don't want to be waiting for the computer for things that I shouldn't have to be waiting for the computer for. For small interactive things. That involves, like, it's not saying \"oh yes, eliminate animations because it takes too long\". I just want everything to be interactive… all the time.</p>\n<p>I want it to be responsive to my input.</p>\n</blockquote>\n<p>This really is the crux of the problem. As soon as you start your actions and you have to stop because the software is not able to follow you, it's over (exhibit A: Jira, or as <a href=\"/sounds/posts/2019-08-01-fast/jira.mp3\">John's co-host says…</a>).</p>"}}],"pathPrefix":"articles","first":false,"last":false,"index":3,"pageCount":10,"additionalContext":{}}}}