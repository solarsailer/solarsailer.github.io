{"pageContext":{"group":[{"node":{"id":"32ed6fed-3112-574b-b871-4dfc8f6d7fab","frontmatter":{"path":null,"title":"Glory To Rome, classic to ashes","date":"2018-09-16","readableDate":"16 September 2018","redirectFrom":null,"excerpt":"","excerptQuote":null},"fields":{"path":"/2018/09/gtr/","slug":"/2018/09/gtr/"},"html":"<p>Fantastic article about the story the cardgame \"Glory To Rome\" by <a href=\"https://arstechnica.com/gaming/2018/09/how-a-ceo-fiddled-while-beloved-board-game-glory-to-rome-crashed-and-burned/?comments=1\">Cyrus Farivar at Ars Technica</a>:</p>\n<blockquote>\n<p>But GTR felt different. First, I noticed the packaging. Unlike the high-quality large-format cardboard boxes with soft colors and thoughtful art, GTR came in a compact, cheap, plastic tub that wasn’t much bigger than a large paperback book. Second, and more jarring, was the game's art. It had a bright color palette and cartoonish characters that seemed like they belonged in a children’s clip art computer game.</p>\n<p>[He] started unpacking the game and patiently explaining the rules. What immediately struck me was the mechanic allowing the player to choose what type any given card would be—one of a few choices that would automatically exclude the others. GTR appeared to be full of intrigue and strategy, and there were multiple ways to win. […]</p>\n<p>In less than a decade, how could a game whose ranking still remains relatively high (150) on Board Game Geek — just a few places above Magic: The Gathering and a few places lower than Carcassonne — have totally disappeared? What happened? […]</p>\n<p>\"It’s one of those games, you just recognize the genius of the design of it,\" Lozito told Ars. \"This is one of the quintessential big games in a small box. Every time you sit down to play it it plays differently, the cards are all crazy. I looked at the game and I have no idea how his brain could come up with such a complex game out of 125 cards or whatever.\" […]</p>\n<p>As GTR continued to gather critical and cult-classic steam, word started getting back to [co-creator Carter] that one of the game’s primary problems was its awful production—those nausea-inducing colors and a cheap plastic box. […]</p>\n<p>[After the Kickstarter's success], this should have been the moment that Carter seized game-design glory. With a successful production, he could have taken the game from indie cult favorite to something much bigger. But according to Rao, this influx of cash instead represented the beginning of the end.</p>\n</blockquote>\n<p>Here's a description from Ed Carter, one of the \"co-creators\", from the same article:</p>\n<blockquote>\n<p>Early on, Glory To Rome was often called \"San Juan on Steroids,\" but it would probably be more accurate to call it \"San Juan meets Magic The Gathering.\" There are 40 different cards in Glory To Rome and each one has a unique ability. Only four of them are sensible \"Improve your X by Y\" abilities—the rest are ridiculous, convoluted powers like \"Incomplete MARBLE structures provide function.\" That generates 760 different two-card combinations and many thousands of three-card ones. I've played hundreds of games of GTR over the years so I've thought about a lot of these combinations, but certainly not all of them.</p>\n<p>Also, while most games are balanced using a stable equilibrium with the aim that no card should be so overpowering that it breaks the game, Glory To Rome is balanced using astable equilibrium—our aim was that in the right combinations, virtually every card would be able to contribute to a runaway victory.</p>\n</blockquote>\n<p>Glory To Rome is a complex cardgame, with tons of combination and ways of winning. I was never aware that the game was unavailable. I got a copy of the French version (by Filosofia) a few years ago when it was in store almost anywhere in France, in a reprinted and decent version, so this story is all news to me. It's funny to think that the game was \"everywhere\" here, but unavailable in its home-country.</p>\n<p>It's a shame though, since the game is really, really great.</p>\n<p><em>Side note: the work by <a href=\"https://www.boardgamegeek.com/thread/643046/poll-would-you-buy-re-design-glory-rome\">Heiko Günther</a> is beautiful too. I think that the French version is clearer in an actual game, but wow this is pretty.</em></p>\n<hr>\n<p>This article makes me think that many boardgames disappear each year, going unnoticed and forgotten. I wrote about <a href=\"https://solarsailer.net/2015/09/quantum-post-mortem/\">Quantum</a> before, one of my favorite boardgame, which is out of stock too. I looked for a new copy a few months ago, and to my surprise, wasn't able to find one. I looked today, and the game is not even listed on most sites anymore.</p>\n<p>Each year, an increased number of new games is released, and each year, an even bigger number are retired forever. The disturbing thing, however, is that most of these games are, actually, great games. Only a small and highly-successful portion of game will be kept forever (Catan, Race for the Galaxy, Carcassonne, etc.). I don't know if a boardgame-preservation initiative exists somewhere…</p>"}},{"node":{"id":"ac4a8be6-df2b-56c6-a0ac-683c7299a600","frontmatter":{"path":null,"title":"Reboot","date":"2018-07-20","readableDate":"20 July 2018","redirectFrom":null,"excerpt":"I have redesigned Solar Sailer, making the home page the most important one and refocusing this site as a way to find me on Internet. The blog is relegated to a secondary part of the website. I still plan to publish articles, but the focus of Solar Sailer is to quickly know who I am, what I've done and where you can find me. The rest is a bonus.","excerptQuote":null},"fields":{"path":"/2018/07/reboot/","slug":"/2018/07/reboot/"},"html":"<p>It's been a long time since my last post (more than two years, in fact). And the reason is absurd.</p>\n<p><strong>tl;dr</strong>: I have redesigned Solar Sailer, making the <a href=\"/\">home page</a> the most important one and refocusing this site as a way to find me on Internet. The blog is relegated to a secondary part of the website. I still plan to publish articles, but the focus of Solar Sailer is to quickly know who I am, what I've done and where you can find me.</p>\n<p>The rest is a bonus. However, I'm still planning to expand this website in new ways — adding a portfolio and a resume, most notably.</p>\n<p><a href=\"/\"> <img src=\"/images/posts/2018-07-20-reboot.jpg\" alt=\"New redesign and home page\"> </a></p>\n<p>If you want to read more about why it took so long, continue. Otherwise, you know everything. 😉</p>\n<hr>\n<p>I was using <a href=\"http://jekyllrb.com\">Jekyll</a> to generate this blog and hosting it with <a href=\"https://pages.github.com\">GitHub Pages</a> (Jekyll is maintained by GitHub, so the workflow to publish a Jekyll site on GitHub is dead simple if you accept their dependencies and constraints). Then, one day, GitHub said that they were deprecating the Markdown engine that I was using, affecting a few posts I wrote.</p>\n<p>I wanted to redesign this site for a long time, so instead of just updating the posts, I decided to rewrite the whole blog (like every developer do each time they have a small change to do — it's our curse).</p>\n<p>I experimented. I designed 6 or 8 layouts. I was never happy, and I never gave me the time to finish it properly. When I started to implement a new design, I let it wither for a few months. And when I came back, I just ditched it all. Again. And again. And again.</p>\n<p>I moved the blog to <a href=\"https://gohugo.io\">Hugo</a>. Then I came back to Jekyll once more. I modernized everything. Then I was fed up with Jekyll again, so I tried <a href=\"https://www.gatsbyjs.org\">Gatsby</a>. And I did other things, abandoning the redesign once again. Meanwhile, and even if I had dozens of drafts, I couldn't update the old blog with new articles. So it languished there, in its infamous uglyness (something I was not proud of, calling myself a <em>designer</em>).</p>\n<p>And finally, I retried Gatsby recently and completed a new design. It's not perfect. It's not well tested on older browsers. But it works, in a good enough way for me — I have already spent too much time on it.</p>\n<p>I've also cut the dependency I had on GitHub Pages. I'm still using GitHub to host this website, but the workflow is separated and I'm free to use what I want.</p>\n<p><strong>It's time to ship.</strong></p>\n<hr>\n<p>More than just a simple redesign, I wanted to reboot the site to add a <strong>portfolio</strong>, a <strong>resume</strong>, a <strong>documentation·codex·tutorials</strong>, as well as a <strong>photo</strong> and <strong>automation</strong> sections. Of course, if I wanted to do it all, I would never have finished anything, so I just focused on a simple redesign at the time being, keeping in mind that the site would be expanded later.</p>\n<p>The goal, in the end, is to do all that — if I'm motivated enough. A good start would be to publish new articles with a regular schedule.</p>\n<hr>\n<p>Another thing that was ticking for this website was the \"deprecation\" of <a href=\"https://security.googleblog.com/2018/02/a-secure-web-is-here-to-stay.html\">HTTP by Chrome in an upcoming update</a>. By deprecation, I mean that Chrome will show an \"Unsecure\" flag on non-HTTPS websites. HTTP will always work, but it will be relegated to a legacy protocol that nobody should continue to use.</p>\n<p>I was in a hurry to complete this reboot before this update. I soft-launched the new site a few weeks ago, and tweaked it since. And now it's official.</p>\n<hr>\n<p>To be a little bit exhaustive:</p>\n<ul>\n<li>I have 6 designs in Sketch files, plus a few more that I did directly in the browser.</li>\n<li>I did more than 50 logos. And I'm still not satisfied by the one I use now (it's not the best that I did, but I think it fits better with the layout and what I wanted to do). It's so hard to capture the essence of something personal. It's a blank canvas without any constraints.</li>\n<li>I tried 4 or 5 blog engines (<a href=\"http://jekyllrb.com\">Jekyll</a>, <a href=\"http://www.metalsmith.io\">Metalsmith</a>, <a href=\"https://www.gatsbyjs.org\">Gatsby</a>, <a href=\"https://gohugo.io\">Hugo</a> and others). I even toyed with the idea of creating my own.</li>\n</ul>\n<p>I'm so exhausted by this whole process and that's mainly why I'm so long to end this blog post. 😇</p>\n<hr>\n<p>I hope you'll like it.</p>"}},{"node":{"id":"33454b0a-840c-5f30-9cad-36f1647987a9","frontmatter":{"path":null,"title":"Cats, taverns and cleaning systems","date":"2016-04-01","readableDate":"01 April 2016","redirectFrom":null,"excerpt":null,"excerptQuote":{"name":"Tarn Adams","quote":"It’s funny how I have popular bugs, right? You shouldn’t have popular bugs."}},"fields":{"path":"/2016/04/dwarf-fortress-systems/","slug":"/2016/04/dwarf-fortress-systems/"},"html":"<p><a href=\"http://www.pcgamer.com/dwarf-fortress-creator-on-how-hes-42-towards-simulating-existence/\">Tarn Adams</a>:</p>\n<blockquote>\n<p>It’s funny how I have popular bugs, right? You shouldn’t have popular bugs. […] I added taverns to fortress mode, so the dwarves will go to a proper establishment, get mugs, and make orders, and they’ll drink in the mug. And, you know, things happen, mugs get spilled, there’s some alcohol on the ground.</p>\n<p>Now, the cats would walk into the taverns, right, and because of the old blood footprint code from, like, eight years ago or something, they would get alcohol on their feet. It was originally so people could pad blood around, but now any liquid, right, so they get alcohol on their feet. And then I wanted to add cleaning stuff so when people were bathing, or I even made eyelids work for no reason, because I do random things sometimes. So cats will lick and clean themselves, and on a lark, when I made them clean themselves I’m like, ‘Well, it’s a cat. When you do lick cleaning, you actually ingest the thing that you’re cleaning off, right? They make hairballs, so they must swallow something, right?' And so the cats, when they cleaned the alcohol off their feet, they all got drunk. Because they were drinking.</p>\n<p>But the numbers were off on that. I had never thought about, you know, activating inebriation syndromes back when I was adding the cleaning stuff. I was just like, ‘Well, they ingest it and they get a full dose,’ but a full dose is a whole mug of alcohol for a cat-sized creature, and it does all the blood alcohol size-based calculations, so the cats would get sick and vomit all over the tavern.</p>\n<p>The original bug report is, ‘There’s cat vomit all over my tavern, and there’s a few dead cats,’ or whatever, and they’re like, ‘Why? This is broken.’</p>\n<p>People helped me with this. We were all looking and figuring out, ‘What the heck is going on here?’, and that was the chain of events. It’s like doing the detective work to figure out that entire chain of events is what happened. You can see how adding just a tavern that gave the opportunity for spilling alcohol, which was really uncommon before, now all the spilled alcohol starts to, form in one location where something could start to happen. You activate bugs and little parts of code from eight, six years ago where you just didn’t balance the numbers because it didn’t matter. […]</p>\n<p><strong>PC Gamer: So the cats’ inebriation system was just based on any organism would have the potential to get drunk.</strong></p>\n<p>Yeah, right now it’s any creature that has blood, and that includes, like, an octopus. I don’t know if an octopus can get drunk or not.</p>\n</blockquote>\n<p>The way the different systems are all interacting together is so fascinating. Especially when the outcome becomes something like this. :)</p>\n<hr>\n<blockquote>\n<p>I don’t even use version control. If you don’t know what that is then you’re not gonna yell at me. If you even know what version control is you’re gonna be like, ‘You don’t use version control? You don’t use source control? What is wrong with you? How can you even work?’</p>\n</blockquote>\n<p>I'm still baffled to know that many game developers (or other developers) work without version control. It seems so dangerous, but… well.</p>"}},{"node":{"id":"2fcd3e9e-0496-54ce-9dff-f4f67a6f66aa","frontmatter":{"path":null,"title":"Delight","date":"2016-03-19","readableDate":"19 March 2016","redirectFrom":null,"excerpt":null,"excerptQuote":{"name":"Craig Mod","quote":"And what is delight? For me, delight is born from a tool’s intuitiveness. Things just working without much thought or fiddling."}},"fields":{"path":"/2016/03/delight/","slug":"/2016/03/delight/"},"html":"<p><a href=\"http://craigmod.com/sputnik/leica_q/\">Craig Mod in his beautiful essay about the Leica Q</a>:</p>\n<blockquote>\n<p>And what <em>is</em> delight? For me, delight is born from a tool’s intuitiveness. Things just working without much thought or fiddling. Delight is a simple menu system you almost never have to use. Delight is a well-balanced weight on the shoulder, in the hand. Delight is the just-right tension on the aperture ring between stops. Delight is a single battery lasting all day. Delight is being able to knock out a 10,000 iso image and know it'll be usable. Delight is extracting gorgeous details from the cloak of shadows. Delight is firing off a number of shots without having to wait for the buffer to catch up. Delight is constraints, joyfully embraced.</p>\n</blockquote>\n<p>Bonus:</p>\n<blockquote>\n<p>It should not exist. It is one of those unicorn-like consumer products that so nails nearly every aspect of its being — from industrial to software design, from interface to output — that you can’t help but wonder how it clawed its way from the R&#x26;D lab. Out of the meetings. Away from the committees. How did it manage to maintain such clarity in its point of view?</p>\n</blockquote>\n<p>And:</p>\n<blockquote>\n<p>The Q — like most recent Leicas — is engraved with the softly geometric, proprietary LG 1050 typeface. It feels so, totally, completely at home, stamped into the camera body in all caps. It's highly legible and precisely designed. Minimal, functional, but with a bit of quirky character. Like the Q itself. This is the perfect camera typeface used in the perfect way. Mic dropped. Case closed.</p>\n</blockquote>"}},{"node":{"id":"a2a4af92-5c81-589e-9448-d7f10be63b88","frontmatter":{"path":null,"title":"Why do many software engineers hate Java?","date":"2016-03-17","readableDate":"17 March 2016","redirectFrom":null,"excerpt":null,"excerptQuote":null},"fields":{"path":"/2016/03/java/","slug":"/2016/03/java/"},"html":"<p><a href=\"https://www.quora.com/Why-do-many-software-engineers-not-like-Java/answer/Michael-O-Church\">Michael O. Church</a>:</p>\n<blockquote>\n<p>First, let's cover the technical issues. It's verbose, combines the worst of both worlds between static and dynamic typing by having a hobbled but extremely clunky type system, and mandates running on a virtual machine (VM) that has a macroscopic startup time (not an issue for long-running servers, but painful for command-line applications). […]</p>\n<p>The VM itself has a lot to recommend it. It offers concurrency and garbage collection at a level of quality that, until recently, wasn't found anywhere else. […] Much important software in the early 2000s was written in Java because, at the time, it was the best choice, even taking the mediocrity of the language itself into account. It had Unicode (albeit, UTF-16) from the start and a strong concurrency story, and it was a notch above C++ in terms of user experience. […]</p>\n<p>If you put Java on a technical trial, it doesn't do so bad. The <em>language</em> sucks, the platform is pretty good for most purposes. I do hate the dominant interpretation of \"object-oriented programming\" with a passion, because it objectively sucks. […]</p>\n<p>So let's talk about the political and cultural issues. First, the dominant Java culture is one of mediocrity and bad taste, with MetaModelVibratorVisitorFactory classes dominating. I've heard a number of experts on \"the Java issue\" argue that Java's biggest problem is the community, and that comes directly from the fact that good programmers don't want to deal with the bastardization of OOP that has entrenched itself in mainstream corporate development. You have a lot of people who trained up as \"Java programmers\", haven't seen a command line ever, and have no clue how the computer actually works. Most of them have never actually written a program; they just write classes and some Senior Chief Architect (who makes $246,001 per year and hasn't written a line of code since the 1990s) figures out how to stitch them together, and then tells some other clueless junior how to implement the glue in the gutshot hope that one will actually have the talent to make an actual working program out of the mess.</p>\n<p>This isn't inherent to the JVM, because Clojure (currently hosted on the JVM, although its endgame seems to be language-agnosticism) has a radically different (and better) community. Scala's community is more mixed, but the top Scala engineers (the ones making tools like Spark and Kestrel) are really fucking good.</p>\n<p>[…]</p>\n<p>So, the short answer is: it's mostly not about the underlying platform (which is generally of high quality) and its only partly about the language (which is mediocre but can't be blamed directly for community problems). It goes a lot deeper than that, and not all of it is Java's fault. However, Java takes its share of the blame for its clear favoritism toward large programs (technically, established by its long startup time) and by its support of a very ugly (and counterproductive) variety of object-oriented programming.</p>\n</blockquote>\n<p><a href=\"https://www.quora.com/Why-do-many-software-engineers-not-like-Java/answer/Stanley-Idesis\">Stanley Idesis</a>:</p>\n<blockquote>\n<p>I’ve read the popular answers and will claim no contest to a majority of the complaints I found. […] However, here’s why I <em>love</em> it. […]</p>\n<p>In the Android world, developers use Java because they <em>have</em> to. However, much creativity has sprung from that limitation. People have written many excellent OS libraries in Java for Android. The platform continues to be a hotbed of Java activity which developers contribute to from all over the world. […]</p>\n<p>Android’s open nature, wide distribution, and powerful support from Google are almost enough to make Java hip again. […] Sure, some may argue that other runtimes and languages can enable the same capabilities of the device, but for whatever reason, Android chose Java.</p>\n<p>Until Google changes its mind, Java will remain relevant and the source of fascinating developments in the software community as long as Android remains popular.</p>\n</blockquote>"}},{"node":{"id":"08e28f5c-01fc-53d0-862d-704245052040","frontmatter":{"path":null,"title":"VR is not the future","date":"2016-03-17","readableDate":"17 March 2016","redirectFrom":null,"excerpt":"Right now, journalists and tech companies are all buzzing and craving for VR. When the first officially released headsets will be available, I expect a massive flop. As soon as the novelty wears off, people will just forget it. Because outside of some narrow use cases, it's just not practical or invisible enough.","excerptQuote":null},"fields":{"path":"/2016/03/virtual-reality/","slug":"/2016/03/virtual-reality/"},"html":"<small>\n  <em>This is a prediction. I may (must?) be completely wrong—after all, I hold an unpopular opinion and many tech companies seem to think otherwise. We'll see.</em>‍ 🤷\n  <br><br>\n</small>\n<p><a href=\"https://en.wikipedia.org/wiki/Virtual_reality\">Virtual Reality</a> (or VR) is a fantasy that many geeks love. It's in books, in movies, in games. In our collective mind, virtual reality is like flying cars: it's a dream that we always envisioned for our future as an high tech society.</p>\n<p>Well, we all remember that we didn't get flying cars for the new millenium.</p>\n<p>Incredible technologies portrayed in science-fiction books or movies are generally not really that relevant in reality. Or they are so hard to build that we can't even fathom to create them now. In our history, the way our society evolved was often very different to how we imagined it in our fictions. When you confront with the reality, many dreams are just what they are: dreams. I would need to dig up some sociology courses that I had—but I remember that this is a recurrent theme in our evolution.</p>\n<p>For VR, it's a bit different: we (almost) have the technology. However, I do think that it's just a fad. A fad that excites many marketers or entrepreneurs. <em>Real-world applications are so narrow.</em></p>\n<hr>\n<p>VR is a cool demo. VR is impressive. Even with our primitive VR technologies, it's still incredible to try.<sup id=\"fnref-1\"><a href=\"#fn-1\" class=\"footnote-ref\">1</a></sup></p>\n<p>VR is also making people sick—yes, many people suffer from motion sickness.</p>\n<p>VR is pretty boring for games, its main application right now. Yes, the immersion is better. Nop, the controls are worse. You can't move in a game without hitting a wall. You can't use your hands without complex gloves or other utensils. The possibility are not that huge: okay, it might be great for some first-person games where you don't move. But that's just a small subset of all the games we can create.</p>\n<p>VR is ugly. VR is cumbersome. VR is like Google Glass (remember that?) in so many ways.</p>\n<figure>\n  <img\n    src=\"/images/posts/2016-03-17-virtual-reality.png\"\n    alt=\"Men and women sitting with a VR headset, Mark Zuckerberg marching among them.\"\n    title=\"The future?\"\n  >\n  <figcaption>The future? Really?</figcaption>\n</figure>\n<p>If you're at home, it might be fine, although that wearing another thing on your head is not that comfy. I already wear glasses, I really don't want to add something more on my head, I assure you. Especially if it means that I might hit a wall someway.<sup id=\"fnref-2\"><a href=\"#fn-2\" class=\"footnote-ref\">2</a></sup></p>\n<p>Outside? At work? We are going to need many years to be okay with that.</p>\n<p>The day we'll be able to have VR headsets the size of a regular pair of glasses is far. We might be already destroying our eyes by viewing screens all day—I can't wait to wear VR headsets a few centimeters from my retinas all the time!</p>\n<hr>\n<p>VR is not completely useless. There's some fields where virtual reality might be useful. Want to visit a new flat in a town far far away? You're a future surgeon and you need to practice during your school years? There's a myriad of applications outside of gaming and home uses.</p>\n<p>Unfortunately, right now, people imagine that VR will be used to handle and manipulate softwares, computers or playing games. That's absurd.</p>\n<blockquote class=\"twitter-tweet\" data-lang=\"en\"><p lang=\"en\" dir=\"ltr\">Using VR to work on scenes in the Unity Editor: <a href=\"https://twitter.com/timoni\">@timoni</a>&#39;s demo on-stage at <a href=\"https://twitter.com/hashtag/GDC16?src=hash\">#GDC16</a>: <a href=\"https://t.co/tbUmVAemBU\">https://t.co/tbUmVAemBU</a> <a href=\"https://twitter.com/hashtag/unity3d?src=hash\">#unity3d</a> <a href=\"https://t.co/T1EH8MsLWb\">pic.twitter.com/T1EH8MsLWb</a></p>&mdash; Ben Pitt (@robotduck) <a href=\"https://twitter.com/robotduck/status/709810463886934016\">March 15, 2016</a></blockquote>\n<p>Seriously? Who would do that? What the point? Who in their right mind thought it was a good idea!?</p>\n<p>When I say that VR is not the future, I don't mean that VR will disappear completely. But we need to take a step back and really think about it. We need to stop to try to put VR everywhere—it's just a waste of time.</p>\n<p>The only application that will make VR a general use product might be porn. Honestly, except for that, I don't see a future where VR is ubiquitous. That just doesn't make any sense.</p>\n<hr>\n<p>Virtual reality is a fad. And right now, journalists and tech companies are all buzzing and craving for that. When the first officially released headsets will be available, I expect a massive flop. As soon as the novelty wears off, people will just forget it. <strong>Because outside of some narrow use cases, it's just not practical or invisible enough.</strong></p>\n<p><a href=\"https://twitter.com/hyperisland/status/710052291315965953\">F*** it, I give up.</a></p>\n<div class=\"footnotes\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<p>VR is the new <a href=\"https://en.wikipedia.org/wiki/Augmented_reality\">AR</a>? I'm still inclined to think there's a slight chance that AR might come back in a way or another and be pertinent.</p>\n<a href=\"#fnref-1\" class=\"footnote-backref\">↩</a>\n</li>\n<li id=\"fn-2\">\n<p>It's like 3D glasses in theaters, but worse. And 3D glasses are already an aberration, we all agree, right?</p>\n<a href=\"#fnref-2\" class=\"footnote-backref\">↩</a>\n</li>\n</ol>\n</div>"}},{"node":{"id":"ab98c952-d0f2-550c-b217-759ca76972eb","frontmatter":{"path":null,"title":"Inside the mind of a master procrastinator","date":"2016-03-15","readableDate":"15 March 2016","redirectFrom":null,"excerpt":null,"excerptQuote":{"name":"Tim Urban","quote":"[My rehearsal] was three days before my talk—and it was pretty rough, confirming to me and everyone present that I was officially not a fraud when it came to my topic. The irony of a guy rehearsing his TED Talk about how he’s a bad procrastinator, and being clearly underprepared while doing so, was not lost on anyone."}},"fields":{"path":"/2016/03/doing-a-ted-talk/","slug":"/2016/03/doing-a-ted-talk/"},"html":"<p><a href=\"http://waitbutwhy.com/2016/03/doing-a-ted-talk-the-full-story.html\">Tim Urban about rehearsing for his TED Talk</a>:</p>\n<blockquote>\n<p> I’ve mentioned before that we all have this problem where we’re weirdly obsessed with what other people think of us, so it makes sense that public speaking should be our collective phobia.</p>\n<p>But then we also live in a world where public speaking can happen to any of us at any time. […]</p>\n<p>\"Hey TED Staff,</p>\n<p>I've decided to do my talk on procrastination. It's the thing I'm best at.</p>\n<p>Best,</p>\n<p>November Tim\"</p>\n<p>[…]</p>\n<p>[My rehearsal] was three days before my talk—and it was pretty rough, confirming to me and everyone present that I was officially not a fraud when it came to my topic. The irony of a guy rehearsing his TED Talk about how he’s a bad procrastinator, and being clearly underprepared while doing so, was not lost on anyone.</p>\n</blockquote>\n<p><strong>UPDATE</strong>: and <a href=\"http://www.ted.com/talks/tim_urban_inside_the_mind_of_a_master_procrastinator\">the talk is up on TED</a>. No surprise: it's great.</p>"}},{"node":{"id":"f1e091fb-b1aa-5f2f-a186-e6dfb76d5d66","frontmatter":{"path":null,"title":"Invention Centers","date":"2016-02-16","readableDate":"16 February 2016","redirectFrom":null,"excerpt":null,"excerptQuote":{"name":"Alan Kay","quote":"Innovation is the process of taking something that’s already been invented and packaging it nicer. […] Problem-finding is about how to get something out of almost nothing in some new area."}},"fields":{"path":"/2016/02/invention-center/","slug":"/2016/02/invention-center/"},"html":"<p><a href=\"http://www.fastcodesign.com/3046437/5-steps-to-recreate-xerox-parcs-design-magic-from-the-guy-who-helped-make-it\">Alan Kay</a>:</p>\n<blockquote>\n<p>Invention centers are 20 to 40 people doing odd things. Innovation is the process of taking something that’s already been invented and packaging it nicer.</p>\n<p>Problem-finding is about how to get something out of almost nothing in some new area. You're by definition not doing something incremental. There’s a lot of playful stuff going on. The probability of a good idea is pretty low. Most of the ideation that happens [in an invention center] are things that get rejected, which is normal in this line of work. Very few people understand that.</p>\n</blockquote>\n<p>Later:</p>\n<blockquote>\n<p>The shortest lived group at Xerox PARC was \"Office of the Future,\" because Xerox executives would not leave them alone.</p>\n<p>I chose the most innocuous name for my own group, the Learning Research Group. Nobody knew what it meant, so they left us alone to invent-object oriented programming and the GUI.</p>\n</blockquote>\n<p>So weird that something like CDG is backed by SAP.</p>\n<p>(via <a href=\"http://us1.campaign-archive2.com/?u=53a12bfed319e2ce36b906532&#x26;id=49acf1cd18\">Avdi Grimm</a>)</p>"}},{"node":{"id":"b6167671-3a84-5c7a-b440-d16eca3cdc39","frontmatter":{"path":null,"title":"The sad state of web app deployment","date":"2015-10-13","readableDate":"13 October 2015","redirectFrom":null,"excerpt":null,"excerptQuote":{"name":"Eevee","quote":"We’ve been doing this for 20 years. We should have this by now. It should work, it should be pluggable and agnostic, and it should do everything right. […] Instead, we stack layer after layer of additional convoluted crap on top of what we’ve already got because we don’t know how to fix it."}},"fields":{"path":"/2015/10/sad-state-web-deployment/","slug":"/2015/10/sad-state-web-deployment/"},"html":"<p><a href=\"http://eev.ee/blog/2015/09/17/the-sad-state-of-web-app-deployment/\">Eevee on Fuzzy Notepad</a>:</p>\n<blockquote>\n<p>We’ve been doing this for 20 years. We should have this by now. It should work, it should be pluggable and agnostic, and it should do everything right. […]</p>\n<p>Instead, we stack layer after layer of additional convoluted crap on top of what we’ve already got because we don’t know how to fix it. Instead, we flit constantly from Thin to Mongrel to Passenger to Heroku to Bitnami to Docker to whatever new way to deploy trivial apps came out yesterday. Instead, we obsess over adding better Sass integration to our frameworks.</p>\n<p>And I’m really not picking on Ruby, or Rails, or this particular app. I hate deploying my own web software, because there are so many parts all over the system that only barely know about each other, but if any of them fail then the whole shebang stops working.</p>\n</blockquote>\n<p>See also: <a href=\"https://solarsailer.net/2015/01/something-slightly-less-terrible/\">Something Slightly Less Terrible</a>.</p>"}}],"pathPrefix":"articles","first":true,"last":false,"index":1,"pageCount":9,"additionalContext":{}}}