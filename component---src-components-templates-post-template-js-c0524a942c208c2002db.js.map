{"version":3,"sources":["webpack:///./src/components/templates/PostTemplate.js","webpack:///./node_modules/url/url.js","webpack:///./node_modules/node-libs-browser/node_modules/punycode/punycode.js","webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/url/util.js","webpack:///./node_modules/querystring-es3/index.js","webpack:///./node_modules/querystring-es3/decode.js","webpack:///./node_modules/querystring-es3/encode.js"],"names":["PostTemplate","data","markdownRemark","frontmatter","title","readableDate","showPageTitle","excerptLine","excerptQuote","path","fields","html","siteMetadata","site","IsomorphicURL","URL","window","metaTitle","author","metaUrl","siteUrl","toString","metaDescription","name","quote","getExcerpt","description","content","property","url","date","query","punycode","util","Url","this","protocol","slashes","auth","host","port","hostname","hash","search","pathname","href","exports","parse","urlParse","resolve","source","relative","resolveObject","format","obj","isString","prototype","call","protocolPattern","portPattern","simplePathPattern","unwise","concat","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","unsafeProtocol","hostlessProtocol","slashedProtocol","querystring","parseQueryString","slashesDenoteHost","isObject","u","TypeError","queryIndex","indexOf","splitter","uSplit","split","replace","rest","join","trim","length","simplePath","exec","substr","proto","lowerProto","toLowerCase","match","atSign","hostEnd","i","hec","lastIndexOf","slice","decodeURIComponent","parseHost","ipv6Hostname","hostparts","l","part","newpart","j","k","charCodeAt","validParts","notHost","bit","push","unshift","toASCII","p","h","ae","esc","encodeURIComponent","escape","qm","s","Object","keys","stringify","charAt","rel","result","tkeys","tk","tkey","rkeys","rk","rkey","v","relPath","shift","isSourceAbs","isRelAbs","mustEndAbs","removeAllDots","srcPath","psychotic","pop","isNullOrUndefined","authInHost","isNull","last","hasTrailingSlash","up","splice","isAbsolute","root","nodeType","module","freeGlobal","global","self","maxInt","base","tMin","tMax","skew","damp","initialBias","initialN","delimiter","regexPunycode","regexNonASCII","regexSeparators","errors","baseMinusTMin","floor","Math","stringFromCharCode","String","fromCharCode","error","type","RangeError","map","array","fn","mapDomain","string","parts","ucs2decode","value","extra","output","counter","ucs2encode","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","decode","input","out","basic","index","oldi","w","t","baseMinusT","codePoint","inputLength","n","bias","encode","handledCPCount","basicLength","m","q","currentValue","handledCPCountPlusOne","qMinusT","test","webpackPolyfill","deprecate","paths","children","defineProperty","enumerable","get","arg","hasOwnProperty","prop","qs","sep","eq","options","regexp","maxKeys","len","kstr","vstr","x","idx","isArray","Array","xs","stringifyPrimitive","isFinite","undefined","objectKeys","ks","f","res","key"],"mappings":"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","file":"component---src-components-templates-post-template-js-c0524a942c208c2002db.js","sourcesContent":["import React from 'react'\nimport {Helmet} from 'react-helmet'\nimport {URL} from 'url'\nimport {graphql} from 'gatsby'\n\nimport Layout from '../layouts/PageLayout'\nimport PageTitle from '../PageTitle'\nimport Post from '../Post'\n\n// -------------------------------------------------------------\n// Functions.\n// -------------------------------------------------------------\n\nfunction getExcerpt(excerptLine, excerptQuote) {\n  if (excerptLine) return excerptLine\n\n  if (excerptQuote) {\n    return `${excerptQuote.name}: “${excerptQuote.quote}”`\n  }\n\n  return null\n}\n\n// -------------------------------------------------------------\n// Default.\n// -------------------------------------------------------------\n\nexport default function PostTemplate({data}) {\n  const {\n    markdownRemark: {\n      frontmatter: {\n        title,\n        readableDate,\n        showPageTitle,\n        excerptLine,\n        excerptQuote\n      },\n      fields: {path},\n      html\n    },\n    site: {siteMetadata}\n  } = data\n\n  const IsomorphicURL = URL ? URL : window.URL\n\n  // Update for meta tags.\n  const metaTitle = `${title} — ${siteMetadata.author}`\n  const metaUrl = new IsomorphicURL(path, siteMetadata.siteUrl).toString()\n  const metaDescription =\n    getExcerpt(excerptLine, excerptQuote) || siteMetadata.description\n\n  return (\n    <Layout>\n      <Helmet>\n        <title>{metaTitle}</title>\n\n        <meta name=\"twitter:title\" content={metaTitle} />\n        <meta property=\"og:title\" content={metaTitle} />\n\n        <meta name=\"twitter:url\" content={metaUrl} />\n        <meta property=\"og:url\" content={metaUrl} />\n\n        {metaDescription && (\n          <meta name=\"twitter:description\" content={metaDescription} />\n        )}\n        {metaDescription && (\n          <meta property=\"og:description\" content={metaDescription} />\n        )}\n      </Helmet>\n\n      {showPageTitle ? (\n        <>\n          <PageTitle>{title}</PageTitle>\n          <Post url={path} date={readableDate} content={html} />\n        </>\n      ) : (\n        <Post url={path} title={title} date={readableDate} content={html} />\n      )}\n    </Layout>\n  )\n}\n\n// -------------------------------------------------------------\n// Queries.\n// -------------------------------------------------------------\n\nexport const query = graphql`\n  query($id: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n        description\n        siteUrl\n      }\n    }\n\n    markdownRemark(id: {eq: $id}) {\n      html\n      frontmatter {\n        date\n        readableDate: date(formatString: \"DD MMMM YYYY\")\n        title\n        showPageTitle\n        excerptLine: excerpt\n        excerptQuote {\n          name\n          quote\n        }\n      }\n      fields {\n        path\n      }\n    }\n  }\n`\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict';\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.array.last-index-of\");\n\nrequire(\"core-js/modules/es6.regexp.match\");\n\nrequire(\"core-js/modules/es6.string.trim\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.array.index-of\");\n\nrequire(\"core-js/modules/es6.regexp.search\");\n\nvar punycode = require('punycode');\n\nvar util = require('./util');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n} // Reference: RFC 3986, RFC 1808, RFC 2396\n// define these here so at least they only have to be\n// compiled once on the first module load.\n\n\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n    // Special case for a simple path URL\nsimplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n    // RFC 2396: characters reserved for delimiting URLs.\n// We actually just auto-escape these.\ndelims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n    // RFC 2396: characters not allowed for various reasons.\nunwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\nautoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n// Note that any invalid chars are also handled, but these\n// are the ones that are *expected* to be seen, so we fast-path\n// them.\nnonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\nunsafeProtocol = {\n  'javascript': true,\n  'javascript:': true\n},\n    // protocols that never have a hostname.\nhostlessProtocol = {\n  'javascript': true,\n  'javascript:': true\n},\n    // protocols that always contain a // bit.\nslashedProtocol = {\n  'http': true,\n  'https': true,\n  'ftp': true,\n  'gopher': true,\n  'file': true,\n  'http:': true,\n  'https:': true,\n  'ftp:': true,\n  'gopher:': true,\n  'file:': true\n},\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n  var u = new Url();\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function (url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  } // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n\n\n  var queryIndex = url.indexOf('?'),\n      splitter = queryIndex !== -1 && queryIndex < url.indexOf('#') ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n  var rest = url; // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  } // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n\n\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] && (slashes || proto && !slashedProtocol[proto])) {\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) hostEnd = hec;\n    } // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n\n\n    var auth, atSign;\n\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    } // Now we have a portion which is definitely the auth.\n    // Pull that off.\n\n\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    } // the host is the remaining to the left of the first non-host char\n\n\n    hostEnd = -1;\n\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) hostEnd = hec;\n    } // if we still have not hit it, then the entire thing is a host.\n\n\n    if (hostEnd === -1) hostEnd = rest.length;\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd); // pull out port.\n\n    this.parseHost(); // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n\n    this.hostname = this.hostname || ''; // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n\n    var ipv6Hostname = this.hostname[0] === '[' && this.hostname[this.hostname.length - 1] === ']'; // validate a little.\n\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          } // we test again with ASCII char only\n\n\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host; // strip [ and ] from the hostname\n    // the host field still retains them, though\n\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  } // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n\n\n  if (!unsafeProtocol[lowerProto]) {\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1) continue;\n      var esc = encodeURIComponent(ae);\n\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n\n      rest = rest.split(ae).join(esc);\n    }\n  } // chop off from the tail first.\n\n\n  var hash = rest.indexOf('#');\n\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n\n  var qm = rest.indexOf('?');\n\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n\n  if (rest) this.pathname = rest;\n\n  if (slashedProtocol[lowerProto] && this.hostname && !this.pathname) {\n    this.pathname = '/';\n  } //to support http.request\n\n\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  } // finally, reconstruct the href based on what has been validated.\n\n\n  this.href = this.format();\n  return this;\n}; // format a parsed object into a url string\n\n\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function () {\n  var auth = this.auth || '';\n\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ? this.hostname : '[' + this.hostname + ']');\n\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query && util.isObject(this.query) && Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || query && '?' + query || '';\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':'; // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n\n  if (this.slashes || (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n  pathname = pathname.replace(/[?#]/g, function (match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function (relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function (relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  } // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n\n\n  result.hash = relative.hash; // if the relative url is empty, then there's nothing left to do here.\n\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  } // hrefs like //foo/bar always cut to the protocol.\n\n\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol') result[rkey] = relative[rkey];\n    } //urlParse appends trailing / to urls like http://www.example.com\n\n\n    if (slashedProtocol[result.protocol] && result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n\n      while (relPath.length && !(relative.host = relPath.shift())) {\n        ;\n      }\n\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port; // to support http.request\n\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = result.pathname && result.pathname.charAt(0) === '/',\n      isRelAbs = relative.host || relative.pathname && relative.pathname.charAt(0) === '/',\n      mustEndAbs = isRelAbs || isSourceAbs || result.host && relative.pathname,\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol]; // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;else srcPath.unshift(result.host);\n    }\n\n    result.host = '';\n\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;else relPath.unshift(relative.host);\n      }\n\n      relative.host = null;\n    }\n\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = relative.host || relative.host === '' ? relative.host : result.host;\n    result.hostname = relative.hostname || relative.hostname === '' ? relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath; // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift(); //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n\n      var authInHost = result.host && result.host.indexOf('@') > 0 ? result.host.split('@') : false;\n\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n\n    result.search = relative.search;\n    result.query = relative.query; //to support http.request\n\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') + (result.search ? result.search : '');\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null; //to support http.request\n\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n\n    result.href = result.format();\n    return result;\n  } // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n\n\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (result.host || relative.host || srcPath.length > 1) && (last === '.' || last === '..') || last === ''; // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n\n  var up = 0;\n\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  } // if the path is allowed to go above the root, restore leading ..s\n\n\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' && (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && srcPath.join('/').substr(-1) !== '/') {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' || srcPath[0] && srcPath[0].charAt(0) === '/'; // put the host back\n\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' : srcPath.length ? srcPath.shift() : ''; //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n\n    var authInHost = result.host && result.host.indexOf('@') > 0 ? result.host.split('@') : false;\n\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || result.host && srcPath.length;\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  } //to support request.http\n\n\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') + (result.search ? result.search : '');\n  }\n\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function () {\n  var host = this.host;\n  var port = portPattern.exec(host);\n\n  if (port) {\n    port = port[0];\n\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n\n    host = host.substr(0, host.length - port.length);\n  }\n\n  if (host) this.hostname = host;\n};","require(\"core-js/modules/es6.array.last-index-of\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\n/*! https://mths.be/punycode v1.4.1 by @mathias */\n;\n\n(function (root) {\n  /** Detect free variables */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n  var freeModule = typeof module == 'object' && module && !module.nodeType && module;\n  var freeGlobal = typeof global == 'object' && global;\n\n  if (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal) {\n    root = freeGlobal;\n  }\n  /**\n   * The `punycode` object.\n   * @name punycode\n   * @type Object\n   */\n\n\n  var punycode,\n\n  /** Highest positive signed 32-bit float value */\n  maxInt = 2147483647,\n      // aka. 0x7FFFFFFF or 2^31-1\n\n  /** Bootstring parameters */\n  base = 36,\n      tMin = 1,\n      tMax = 26,\n      skew = 38,\n      damp = 700,\n      initialBias = 72,\n      initialN = 128,\n      // 0x80\n  delimiter = '-',\n      // '\\x2D'\n\n  /** Regular expressions */\n  regexPunycode = /^xn--/,\n      regexNonASCII = /[^\\x20-\\x7E]/,\n      // unprintable ASCII chars + non-ASCII chars\n  regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g,\n      // RFC 3490 separators\n\n  /** Error messages */\n  errors = {\n    'overflow': 'Overflow: input needs wider integers to process',\n    'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n    'invalid-input': 'Invalid input'\n  },\n\n  /** Convenience shortcuts */\n  baseMinusTMin = base - tMin,\n      floor = Math.floor,\n      stringFromCharCode = String.fromCharCode,\n\n  /** Temporary variable */\n  key;\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * A generic error utility function.\n   * @private\n   * @param {String} type The error type.\n   * @returns {Error} Throws a `RangeError` with the applicable error message.\n   */\n\n  function error(type) {\n    throw new RangeError(errors[type]);\n  }\n  /**\n   * A generic `Array#map` utility function.\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} callback The function that gets called for every array\n   * item.\n   * @returns {Array} A new array of values returned by the callback function.\n   */\n\n\n  function map(array, fn) {\n    var length = array.length;\n    var result = [];\n\n    while (length--) {\n      result[length] = fn(array[length]);\n    }\n\n    return result;\n  }\n  /**\n   * A simple `Array#map`-like wrapper to work with domain name strings or email\n   * addresses.\n   * @private\n   * @param {String} domain The domain name or email address.\n   * @param {Function} callback The function that gets called for every\n   * character.\n   * @returns {Array} A new string of characters returned by the callback\n   * function.\n   */\n\n\n  function mapDomain(string, fn) {\n    var parts = string.split('@');\n    var result = '';\n\n    if (parts.length > 1) {\n      // In email addresses, only the domain name should be punycoded. Leave\n      // the local part (i.e. everything up to `@`) intact.\n      result = parts[0] + '@';\n      string = parts[1];\n    } // Avoid `split(regex)` for IE8 compatibility. See #17.\n\n\n    string = string.replace(regexSeparators, '\\x2E');\n    var labels = string.split('.');\n    var encoded = map(labels, fn).join('.');\n    return result + encoded;\n  }\n  /**\n   * Creates an array containing the numeric code points of each Unicode\n   * character in the string. While JavaScript uses UCS-2 internally,\n   * this function will convert a pair of surrogate halves (each of which\n   * UCS-2 exposes as separate characters) into a single code point,\n   * matching UTF-16.\n   * @see `punycode.ucs2.encode`\n   * @see <https://mathiasbynens.be/notes/javascript-encoding>\n   * @memberOf punycode.ucs2\n   * @name decode\n   * @param {String} string The Unicode input string (UCS-2).\n   * @returns {Array} The new array of code points.\n   */\n\n\n  function ucs2decode(string) {\n    var output = [],\n        counter = 0,\n        length = string.length,\n        value,\n        extra;\n\n    while (counter < length) {\n      value = string.charCodeAt(counter++);\n\n      if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n        // high surrogate, and there is a next character\n        extra = string.charCodeAt(counter++);\n\n        if ((extra & 0xFC00) == 0xDC00) {\n          // low surrogate\n          output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n        } else {\n          // unmatched surrogate; only append this code unit, in case the next\n          // code unit is the high surrogate of a surrogate pair\n          output.push(value);\n          counter--;\n        }\n      } else {\n        output.push(value);\n      }\n    }\n\n    return output;\n  }\n  /**\n   * Creates a string based on an array of numeric code points.\n   * @see `punycode.ucs2.decode`\n   * @memberOf punycode.ucs2\n   * @name encode\n   * @param {Array} codePoints The array of numeric code points.\n   * @returns {String} The new Unicode string (UCS-2).\n   */\n\n\n  function ucs2encode(array) {\n    return map(array, function (value) {\n      var output = '';\n\n      if (value > 0xFFFF) {\n        value -= 0x10000;\n        output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n        value = 0xDC00 | value & 0x3FF;\n      }\n\n      output += stringFromCharCode(value);\n      return output;\n    }).join('');\n  }\n  /**\n   * Converts a basic code point into a digit/integer.\n   * @see `digitToBasic()`\n   * @private\n   * @param {Number} codePoint The basic numeric code point value.\n   * @returns {Number} The numeric value of a basic code point (for use in\n   * representing integers) in the range `0` to `base - 1`, or `base` if\n   * the code point does not represent a value.\n   */\n\n\n  function basicToDigit(codePoint) {\n    if (codePoint - 48 < 10) {\n      return codePoint - 22;\n    }\n\n    if (codePoint - 65 < 26) {\n      return codePoint - 65;\n    }\n\n    if (codePoint - 97 < 26) {\n      return codePoint - 97;\n    }\n\n    return base;\n  }\n  /**\n   * Converts a digit/integer into a basic code point.\n   * @see `basicToDigit()`\n   * @private\n   * @param {Number} digit The numeric value of a basic code point.\n   * @returns {Number} The basic code point whose value (when used for\n   * representing integers) is `digit`, which needs to be in the range\n   * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n   * used; else, the lowercase form is used. The behavior is undefined\n   * if `flag` is non-zero and `digit` has no uppercase form.\n   */\n\n\n  function digitToBasic(digit, flag) {\n    //  0..25 map to ASCII a..z or A..Z\n    // 26..35 map to ASCII 0..9\n    return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n  }\n  /**\n   * Bias adaptation function as per section 3.4 of RFC 3492.\n   * https://tools.ietf.org/html/rfc3492#section-3.4\n   * @private\n   */\n\n\n  function adapt(delta, numPoints, firstTime) {\n    var k = 0;\n    delta = firstTime ? floor(delta / damp) : delta >> 1;\n    delta += floor(delta / numPoints);\n\n    for (;\n    /* no initialization */\n    delta > baseMinusTMin * tMax >> 1; k += base) {\n      delta = floor(delta / baseMinusTMin);\n    }\n\n    return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n  }\n  /**\n   * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n   * symbols.\n   * @memberOf punycode\n   * @param {String} input The Punycode string of ASCII-only symbols.\n   * @returns {String} The resulting string of Unicode symbols.\n   */\n\n\n  function decode(input) {\n    // Don't use UCS-2\n    var output = [],\n        inputLength = input.length,\n        out,\n        i = 0,\n        n = initialN,\n        bias = initialBias,\n        basic,\n        j,\n        index,\n        oldi,\n        w,\n        k,\n        digit,\n        t,\n\n    /** Cached calculation results */\n    baseMinusT; // Handle the basic code points: let `basic` be the number of input code\n    // points before the last delimiter, or `0` if there is none, then copy\n    // the first basic code points to the output.\n\n    basic = input.lastIndexOf(delimiter);\n\n    if (basic < 0) {\n      basic = 0;\n    }\n\n    for (j = 0; j < basic; ++j) {\n      // if it's not a basic code point\n      if (input.charCodeAt(j) >= 0x80) {\n        error('not-basic');\n      }\n\n      output.push(input.charCodeAt(j));\n    } // Main decoding loop: start just after the last delimiter if any basic code\n    // points were copied; start at the beginning otherwise.\n\n\n    for (index = basic > 0 ? basic + 1 : 0; index < inputLength;)\n    /* no final expression */\n    {\n      // `index` is the index of the next character to be consumed.\n      // Decode a generalized variable-length integer into `delta`,\n      // which gets added to `i`. The overflow checking is easier\n      // if we increase `i` as we go, then subtract off its starting\n      // value at the end to obtain `delta`.\n      for (oldi = i, w = 1, k = base;;\n      /* no condition */\n      k += base) {\n        if (index >= inputLength) {\n          error('invalid-input');\n        }\n\n        digit = basicToDigit(input.charCodeAt(index++));\n\n        if (digit >= base || digit > floor((maxInt - i) / w)) {\n          error('overflow');\n        }\n\n        i += digit * w;\n        t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;\n\n        if (digit < t) {\n          break;\n        }\n\n        baseMinusT = base - t;\n\n        if (w > floor(maxInt / baseMinusT)) {\n          error('overflow');\n        }\n\n        w *= baseMinusT;\n      }\n\n      out = output.length + 1;\n      bias = adapt(i - oldi, out, oldi == 0); // `i` was supposed to wrap around from `out` to `0`,\n      // incrementing `n` each time, so we'll fix that now:\n\n      if (floor(i / out) > maxInt - n) {\n        error('overflow');\n      }\n\n      n += floor(i / out);\n      i %= out; // Insert `n` at position `i` of the output\n\n      output.splice(i++, 0, n);\n    }\n\n    return ucs2encode(output);\n  }\n  /**\n   * Converts a string of Unicode symbols (e.g. a domain name label) to a\n   * Punycode string of ASCII-only symbols.\n   * @memberOf punycode\n   * @param {String} input The string of Unicode symbols.\n   * @returns {String} The resulting Punycode string of ASCII-only symbols.\n   */\n\n\n  function encode(input) {\n    var n,\n        delta,\n        handledCPCount,\n        basicLength,\n        bias,\n        j,\n        m,\n        q,\n        k,\n        t,\n        currentValue,\n        output = [],\n\n    /** `inputLength` will hold the number of code points in `input`. */\n    inputLength,\n\n    /** Cached calculation results */\n    handledCPCountPlusOne,\n        baseMinusT,\n        qMinusT; // Convert the input in UCS-2 to Unicode\n\n    input = ucs2decode(input); // Cache the length\n\n    inputLength = input.length; // Initialize the state\n\n    n = initialN;\n    delta = 0;\n    bias = initialBias; // Handle the basic code points\n\n    for (j = 0; j < inputLength; ++j) {\n      currentValue = input[j];\n\n      if (currentValue < 0x80) {\n        output.push(stringFromCharCode(currentValue));\n      }\n    }\n\n    handledCPCount = basicLength = output.length; // `handledCPCount` is the number of code points that have been handled;\n    // `basicLength` is the number of basic code points.\n    // Finish the basic string - if it is not empty - with a delimiter\n\n    if (basicLength) {\n      output.push(delimiter);\n    } // Main encoding loop:\n\n\n    while (handledCPCount < inputLength) {\n      // All non-basic code points < n have been handled already. Find the next\n      // larger one:\n      for (m = maxInt, j = 0; j < inputLength; ++j) {\n        currentValue = input[j];\n\n        if (currentValue >= n && currentValue < m) {\n          m = currentValue;\n        }\n      } // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n      // but guard against overflow\n\n\n      handledCPCountPlusOne = handledCPCount + 1;\n\n      if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n        error('overflow');\n      }\n\n      delta += (m - n) * handledCPCountPlusOne;\n      n = m;\n\n      for (j = 0; j < inputLength; ++j) {\n        currentValue = input[j];\n\n        if (currentValue < n && ++delta > maxInt) {\n          error('overflow');\n        }\n\n        if (currentValue == n) {\n          // Represent delta as a generalized variable-length integer\n          for (q = delta, k = base;;\n          /* no condition */\n          k += base) {\n            t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;\n\n            if (q < t) {\n              break;\n            }\n\n            qMinusT = q - t;\n            baseMinusT = base - t;\n            output.push(stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0)));\n            q = floor(qMinusT / baseMinusT);\n          }\n\n          output.push(stringFromCharCode(digitToBasic(q, 0)));\n          bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n          delta = 0;\n          ++handledCPCount;\n        }\n      }\n\n      ++delta;\n      ++n;\n    }\n\n    return output.join('');\n  }\n  /**\n   * Converts a Punycode string representing a domain name or an email address\n   * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n   * it doesn't matter if you call it on a string that has already been\n   * converted to Unicode.\n   * @memberOf punycode\n   * @param {String} input The Punycoded domain name or email address to\n   * convert to Unicode.\n   * @returns {String} The Unicode representation of the given Punycode\n   * string.\n   */\n\n\n  function toUnicode(input) {\n    return mapDomain(input, function (string) {\n      return regexPunycode.test(string) ? decode(string.slice(4).toLowerCase()) : string;\n    });\n  }\n  /**\n   * Converts a Unicode string representing a domain name or an email address to\n   * Punycode. Only the non-ASCII parts of the domain name will be converted,\n   * i.e. it doesn't matter if you call it with a domain that's already in\n   * ASCII.\n   * @memberOf punycode\n   * @param {String} input The domain name or email address to convert, as a\n   * Unicode string.\n   * @returns {String} The Punycode representation of the given domain name or\n   * email address.\n   */\n\n\n  function toASCII(input) {\n    return mapDomain(input, function (string) {\n      return regexNonASCII.test(string) ? 'xn--' + encode(string) : string;\n    });\n  }\n  /*--------------------------------------------------------------------------*/\n\n  /** Define the public API */\n\n\n  punycode = {\n    /**\n     * A string representing the current Punycode.js version number.\n     * @memberOf punycode\n     * @type String\n     */\n    'version': '1.4.1',\n\n    /**\n     * An object of methods to convert from JavaScript's internal character\n     * representation (UCS-2) to Unicode code points, and back.\n     * @see <https://mathiasbynens.be/notes/javascript-encoding>\n     * @memberOf punycode\n     * @type Object\n     */\n    'ucs2': {\n      'decode': ucs2decode,\n      'encode': ucs2encode\n    },\n    'decode': decode,\n    'encode': encode,\n    'toASCII': toASCII,\n    'toUnicode': toUnicode\n  };\n  /** Expose `punycode` */\n  // Some AMD build optimizers, like r.js, check for specific condition patterns\n  // like the following:\n\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    define('punycode', function () {\n      return punycode;\n    });\n  } else if (freeExports && freeModule) {\n    if (module.exports == freeExports) {\n      // in Node.js, io.js, or RingoJS v0.8.0+\n      freeModule.exports = punycode;\n    } else {\n      // in Narwhal or RingoJS v0.7.0-\n      for (key in punycode) {\n        punycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n      }\n    }\n  } else {\n    // in Rhino or a web browser\n    root.punycode = punycode;\n  }\n})(this);","require(\"core-js/modules/es6.object.define-property\");\n\nmodule.exports = function (module) {\n  if (!module.webpackPolyfill) {\n    module.deprecate = function () {};\n\n    module.paths = []; // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};","'use strict';\n\nmodule.exports = {\n  isString: function isString(arg) {\n    return typeof arg === 'string';\n  },\n  isObject: function isObject(arg) {\n    return typeof arg === 'object' && arg !== null;\n  },\n  isNull: function isNull(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function isNullOrUndefined(arg) {\n    return arg == null;\n  }\n};","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict'; // If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.array.is-array\");\n\nrequire(\"core-js/modules/es6.array.index-of\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function (qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n  var maxKeys = 1000;\n\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length; // maxKeys <= 0 means that we should not limit keys count\n\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr,\n        vstr,\n        k,\n        v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict';\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.array.map\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.array.is-array\");\n\nvar stringifyPrimitive = function stringifyPrimitive(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function (obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function (k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n\n      if (isArray(obj[k])) {\n        return map(obj[k], function (v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq + encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map(xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n\n  return res;\n};"],"sourceRoot":""}