{"version":3,"sources":["webpack:///path---articles-4-d2b70bb14bd64c64a9ae.js","webpack:///./.cache/json/articles-4.json"],"names":["webpackJsonp","788","module","exports","pathContext","group","node","id","frontmatter","path","title","date","readableDate","redirectFrom","excerpt","excerptQuote","name","quote","fields","slug","html","pathPrefix","first","last","index","pageCount","additionalContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,aAAeC,QAAUC,MAAQC,GAAA,2HAAAC,aAA+IC,KAAA,KAAAC,MAAA,uCAAAC,KAAA,aAAAC,aAAA,mBAAAC,aAAA,KAAAC,QAAA,KAAAC,cAAoKC,KAAA,WAAAC,MAAA,wGAAiIC,QAAWT,KAAA,oCAAAU,KAAA,qCAAsFC,KAAA,ozCAAq0Cd,MAAQC,GAAA,4IAAAC,aAAgKC,KAAA,KAAAC,MAAA,2CAAAC,KAAA,aAAAC,aAAA,kBAAAC,aAAA,KAAAC,QAAA,KAAAC,cAAuKC,KAAA,kBAAAC,MAAA,mJAAmLC,QAAWT,KAAA,qDAAAU,KAAA,sDAAwHC,KAAA,+tGAAivGd,MAAQC,GAAA,qHAAAC,aAAyIC,KAAA,KAAAC,MAAA,gCAAAC,KAAA,aAAAC,aAAA,mBAAAC,aAAA,KAAAC,QAAA,+IAAAC,aAAA,MAA2SG,QAAWT,KAAA,8BAAAU,KAAA,+BAA0EC,KAAA,qWAAiXd,MAAQC,GAAA,yGAAAC,aAA6HC,KAAA,KAAAC,MAAA,QAAAC,KAAA,aAAAC,aAAA,kBAAAC,aAAA,KAAAC,QAAA,KAAAC,aAAA,MAAwIG,QAAWT,KAAA,kBAAAU,KAAA,mBAAkDC,KAAA,0QAAuRd,MAAQC,GAAA,qIAAAC,aAAyJC,KAAA,KAAAC,MAAA,oCAAAC,KAAA,aAAAC,aAAA,kBAAAC,aAAA,KAAAC,QAAA,KAAAC,cAAgKC,KAAA,gBAAAC,MAAA,8FAA4HC,QAAWT,KAAA,8CAAAU,KAAA,+CAA0GC,KAAA,u4EAA+4Ed,MAAQC,GAAA,iIAAAC,aAAqJC,KAAA,KAAAC,MAAA,gCAAAC,KAAA,aAAAC,aAAA,kBAAAC,aAAA,KAAAC,QAAA,KAAAC,cAA4JC,KAAA,cAAAC,MAAA,uXAAmZC,QAAWT,KAAA,0CAAAU,KAAA,2CAAkGC,KAAA,i1CAAy1Cd,MAAQC,GAAA,sGAAAC,aAA0HC,KAAA,KAAAC,MAAA,KAAAC,KAAA,aAAAC,aAAA,kBAAAC,aAAA,KAAAC,QAAA,KAAAC,aAAA,MAAqIG,QAAWT,KAAA,eAAAU,KAAA,gBAA4CC,KAAA,okCAA6kCd,MAAQC,GAAA,wHAAAC,aAA4IC,KAAA,KAAAC,MAAA,uBAAAC,KAAA,aAAAC,aAAA,oBAAAC,aAAA,KAAAC,QAAA,KAAAC,cAAqJC,KAAA,iBAAAC,MAAA,oTAAmVC,QAAWT,KAAA,iCAAAU,KAAA,kCAAgFC,KAAA,ojEAA8jEd,MAAQC,GAAA,iHAAAC,aAAqIC,KAAA,KAAAC,MAAA,gBAAAC,KAAA,aAAAC,aAAA,oBAAAC,aAAA,KAAAC,QAAA,4QAAAC,aAAA,MAAyZG,QAAWT,KAAA,0BAAAU,KAAA,2BAAkEC,KAAA,mxCAAyxCC,WAAA,WAAAC,OAAA,EAAAC,MAAA,EAAAC,MAAA,EAAAC,UAAA,EAAAC","file":"path---articles-4-d2b70bb14bd64c64a9ae.js","sourcesContent":["webpackJsonp([213449887146903],{\n\n/***/ 788:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"pathContext\":{\"group\":[{\"node\":{\"id\":\"/Users/ashen/Code/solarsailer.net/content/posts/2014-02-05-origami-quartz-composer.md absPath of file >>> MarkdownRemark\",\"frontmatter\":{\"path\":null,\"title\":\"Interaction prototyping with Origami\",\"date\":\"2014-02-05\",\"readableDate\":\"05 February 2014\",\"redirectFrom\":null,\"excerpt\":null,\"excerptQuote\":{\"name\":\"Facebook\",\"quote\":\"Origami provides a set of tools for Quartz Composer that make interaction prototyping a lot easier.\"}},\"fields\":{\"path\":\"/2014/02/origami-quartz-composer/\",\"slug\":\"/2014/02/origami-quartz-composer/\"},\"html\":\"<p><a href=\\\"http://facebook.github.io/origami/\\\">Origami</a> is a plugin for <a href=\\\"http://en.wikipedia.org/wiki/Quartz_Composer\\\">Quartz Composer</a>, developed by Facebook.</p>\\n<p><img src=\\\"/images/posts/2014-02-05-origami.jpg\\\" alt=\\\"Origami\\\"></p>\\n<p>Initially, Quartz Composer is a “visual programming” environment to create animated scenes.</p>\\n<p>But recently, <a href=\\\"https://medium.com/the-year-of-the-looking-glass/af182add5a2f\\\">some designers</a> have started to use it to mockup animations and interactions.</p>\\n<p>Because the primary goal of Quartz Composer is to create motion graphics, it makes sense to use it for interaction prototyping. The problem is that there isn't a lot of patches (a patch is like an instance of a class in a classic object-oriented programming language) dedicated to user interface in Quartz Composer.</p>\\n<p>That's where Origami steps in:</p>\\n<blockquote>\\n<p>Origami provides a set of tools for Quartz Composer that make interaction prototyping a lot easier.</p>\\n<p>Animations, transitions, buttons, layers, phones, etc.</p>\\n</blockquote>\\n<p>I recommend to watch <a href=\\\"https://vimeo.com/85578380\\\">this video</a> to get a brief overview of what is possible with Origami. It's intriguing, it looks promising and it motivates me to learn Quartz Composer more seriously.</p>\"}},{\"node\":{\"id\":\"/Users/ashen/Code/solarsailer.net/content/posts/2014-01-07-how-netflix-reverse-engineered-hollywood.md absPath of file >>> MarkdownRemark\",\"frontmatter\":{\"path\":null,\"title\":\"How Netflix Reverse Engineered Hollywood\",\"date\":\"2014-01-07\",\"readableDate\":\"07 January 2014\",\"redirectFrom\":null,\"excerpt\":null,\"excerptQuote\":{\"name\":\"Alexis Madrigal\",\"quote\":\"We discovered that Netflix possesses not several hundred genres, or even several thousand, but 76,897 unique ways to describe types of movies.\"}},\"fields\":{\"path\":\"/2014/01/how-netflix-reverse-engineered-hollywood/\",\"slug\":\"/2014/01/how-netflix-reverse-engineered-hollywood/\"},\"html\":\"<p><a href=\\\"http://www.theatlantic.com/technology/archive/2014/01/how-netflix-reverse-engineered-hollywood/282679/\\\">Alexis Madrigal on Netflix classification</a> (emphasis mine):</p>\\n<blockquote>\\n<p>[…], we discovered that Netflix possesses not several hundred genres, or even several thousand, <strong>but 76,897 unique ways to describe types of movies</strong>. […]</p>\\n<p>Using large teams of people specially trained to watch movies, Netflix deconstructed Hollywood. They paid people to watch films and tag them with all kinds of metadata. This process is so sophisticated and precise that taggers receive a 36-page training document that teaches them how to rate movies on their sexually suggestive content, goriness, romance levels, and even narrative elements like plot conclusiveness. […]</p>\\n<p>The Netflix Quantum Theory doc spelled out ways of tagging movie endings, the \\\"social acceptability\\\" of lead characters, and dozens of other facets of a movie. Many values are \\\"scalar,\\\" that is to say, they go from 1 to 5. So, every movie gets a romance rating, not just the ones labeled \\\"romantic\\\" in the personalized genres. Every movie's ending is rated from happy to sad, passing through ambiguous. Every plot is tagged. Lead characters' jobs are tagged. Movie locations are tagged. Everything. Everyone.</p>\\n<p>That's the data at the base of the pyramid. It is the basis for creating all the altgenres that I scraped. Netflix's engineers took the microtags and created a syntax for the genres, much of which we were able to reproduce in our generator.</p>\\n</blockquote>\\n<p>This article completely blew my mind. Great journalism.</p>\\n<p>The idea to tag any movie that much and create ultra-specific subgenres is so clever. Hell of a work too.</p>\\n<hr>\\n<p>Concerning the <em>Perry Mason</em> mystery, I found an interesting <a href=\\\"http://www.theatlantic.com/technology/archive/2014/01/how-netflix-reverse-engineered-hollywood/282679/#comment-1184453715\\\">explanation</a> in the comments (yep):</p>\\n<blockquote>\\n<p>Actually, Alexis, I am baffled by your conclusion that the Perry Mason Mystery is a \\\"ghost in the machine\\\".</p>\\n<p>To me it seems obvious: there is a subgenre, \\\"Understated Cerebral Mysteries with Ironclad Plots, Good Dialogue, Not Much Action or Romance, and on the Side of the Defense\\\", that is popular with viewers yet <em>drastically</em> underpopulated. It's so drastically underpopulated that the show that's a best-fit for the category is <em>enormously</em> popular, much more popular than anyone realized.</p>\\n<p>Far from being a \\\"bug\\\", this is programming <em>platinum</em> for Netflix. If they're as smart as I think they are, this is the subgenre where they should be looking to make a TV series. The biggest problem will be finding a showrunner and scriptwriters who are able to go against so many of Hollywood's cliches and assumptions. They need to make something where what is visually interesting, striking, or exciting is unimportant, but where there are no holes in the plots. Very high degree of difficulty, and only profitable to Netflix, which makes money from its shows, not from the advertising.</p>\\n</blockquote>\\n<p>Sounds a bit like <a href=\\\"http://www.imdb.com/title/tt1475582/?ref_=fn_al_tt_1\\\">Sherlock</a>, no?</p>\"}},{\"node\":{\"id\":\"/Users/ashen/Code/solarsailer.net/content/posts/2013-11-21-unity-2d-tutorial.md absPath of file >>> MarkdownRemark\",\"frontmatter\":{\"path\":null,\"title\":\"Pixelnest — Unity 2D tutorial\",\"date\":\"2013-11-21\",\"readableDate\":\"21 November 2013\",\"redirectFrom\":null,\"excerpt\":\"We cooked a complete tutorial about Unity and its new 2D tools. This tutorial covers the creation of a very small game from start to finish.\",\"excerptQuote\":null},\"fields\":{\"path\":\"/2013/11/unity-2d-tutorial/\",\"slug\":\"/2013/11/unity-2d-tutorial/\"},\"html\":\"<p>During the last weeks, we (<a href=\\\"http://dmayance.com/\\\">Damien</a> and I) have cooked a complete tutorial about Unity and its new 2D tools. This tutorial covers the creation of a very small game from start to finish.</p>\\n<p>We hope you will enjoy it.</p>\\n<p>→ <a href=\\\"http://pixelnest.io/tutorials/2d-game-unity/\\\">You can read it here</a>.</p>\"}},{\"node\":{\"id\":\"/Users/ashen/Code/solarsailer.net/content/posts/2013-10-23-below.md absPath of file >>> MarkdownRemark\",\"frontmatter\":{\"path\":null,\"title\":\"Below\",\"date\":\"2013-10-23\",\"readableDate\":\"23 October 2013\",\"redirectFrom\":null,\"excerpt\":null,\"excerptQuote\":null},\"fields\":{\"path\":\"/2013/10/below/\",\"slug\":\"/2013/10/below/\"},\"html\":\"<p><img src=\\\"/images/posts/2013-10-23-below.jpg\\\" alt=\\\"Below\\\"></p>\\n<p>It looks (and sounds) gorgeous. And it's made by Capy, which is arguably one of the best video game studios out there.</p>\\n<p>→ <a href=\\\"http://whatliesbelow.com/\\\">What Lies Below</a>.</p>\"}},{\"node\":{\"id\":\"/Users/ashen/Code/solarsailer.net/content/posts/2013-10-22-how-designers-destroyed-the-world.md absPath of file >>> MarkdownRemark\",\"frontmatter\":{\"path\":null,\"title\":\"How Designers Destroyed The World\",\"date\":\"2013-10-22\",\"readableDate\":\"22 October 2013\",\"redirectFrom\":null,\"excerpt\":null,\"excerptQuote\":{\"name\":\"Mike Monteiro\",\"quote\":\"There are professions more harmful than (industrial) design, but only a very few of them.\"}},\"fields\":{\"path\":\"/2013/10/how-designers-destroyed-the-world/\",\"slug\":\"/2013/10/how-designers-destroyed-the-world/\"},\"html\":\"<p>Better late than never; I've managed to watch <a href=\\\"https://vimeo.com/68470326\\\">How Designers Destroyed The World</a> by Mike Monteiro.</p>\\n<p>It's a great talk except that I'm not fond of the tone. Though it fits well with the content, I find it a bit overdramatic. The end is also a tad lengthy, which is unfortunate.</p>\\n<p>Otherwise, I liked what I heard. <em>Which makes me consider…</em></p>\\n<p>Regularly, I find myself stuck with incredibly ill-conceived things that frustrate me. These objects, rules or designs are things as simple as an ATM, a software or a door. They make us loose time, or worse, do (severe) mistakes.</p>\\n<p>For example: there is a crossroad near my parents house. A few years ago, the mayor decided to remove the road signs at this place AND to not replace it. In France, there is an implicit rule which states that when there are no signs, you have to let the cars at your right cross the junction first. This rule is stupid. <strong>When you drive, you have no time to doubt</strong>. A sign serves primarily as way to convey a danger or a rule, without making you think. You know what you have to do instantly. <em>If you see a stop sign, you stop</em>. That is all.</p>\\n<p>This implicit rule makes us do the contrary. At a junction like the one I talked about before, you see nothing, so you have to think, analyze and react. It's easy to have a (minor) car accident there. Moreover, people of my town had used this junction for years, knowing precisely how to react. But now, the priority rule has changed, and it's a mess. The result? In the best case, everybody stop, wait for 10 seconds to analyze the place and then drive.</p>\\n<p><strong>This is a result of a design decision. Someone decided to do that.</strong> In this case, someone decided to break something that worked well for all this time.</p>\\n<p>Sometimes, it might just be a dumb design that put you in an embarrassing situation. If you are a man, just remember the last time you have used a flat and too-high urinal. :)</p>\\n<p>When I talk about that with some of my friends, they think that I'm excessively demanding and that the problem is me. Perhaps.</p>\\n<p>I will conclude with a quote from the talk:</p>\\n<blockquote>\\n<p>There are professions more harmful than (industrial) design, <strong>but only a very few of them.</strong></p>\\n<p>— Victor Papanek <em>(modified by Mike Monteiro)</em></p>\\n</blockquote>\"}},{\"node\":{\"id\":\"/Users/ashen/Code/solarsailer.net/content/posts/2013-10-18-you-must-prototype-it-in-code.md absPath of file >>> MarkdownRemark\",\"frontmatter\":{\"path\":null,\"title\":\"You must prototype it in code\",\"date\":\"2013-10-18\",\"readableDate\":\"18 October 2013\",\"redirectFrom\":null,\"excerpt\":null,\"excerptQuote\":{\"name\":\"Jeff Atwood\",\"quote\":\"The most destructive symptom of over-planning is the wrongheaded idea that being a Software Architect™ means drawing a lot of UML diagrams and handing them off to a group of developers. […] You can't architect a real world application on a whiteboard. You must prototype it in code to gather data on the performance and design implications of the choices you are making.\"}},\"fields\":{\"path\":\"/2013/10/you-must-prototype-it-in-code/\",\"slug\":\"/2013/10/you-must-prototype-it-in-code/\"},\"html\":\"<p>Jeff Atwood in <a href=\\\"http://www.codinghorror.com/blog/2004/11/good-programmers-get-off-their-butts.html\\\">Good Programmers Get Off Their Butts</a>:</p>\\n<blockquote>\\n<p>I am not proposing a code-like-hell methodology. I am merely observing that, in my experience, <strong>coding without planning is just as futile as coding with too much planning</strong>. Software development is <a href=\\\"http://www.codinghorror.com/blog/archives/000071.html\\\">a wicked problem</a>; you should never make planning decisions without some kind of code prototype to ensure that you're making informed decisions. If you plan too far ahead of the code, I guarantee you are doing work that will be thrown away or altered until it is unrecognizable.</p>\\n<p>The most destructive symptom of over-planning is the wrongheaded idea that being a Software Architect™ means drawing a lot of UML diagrams and handing them off to a group of developers in Bangalore. <strong>UML is great if you don't want to do any work; you just draw pictures of what it would look like if work was actually done</strong>. This is not only borderline laziness, it's also a recipe for disaster. You can't architect a real world application on a whiteboard. You must prototype it in code to gather data on the performance and design implications of the choices you are making.</p>\\n</blockquote>\"}},{\"node\":{\"id\":\"/Users/ashen/Code/solarsailer.net/content/posts/2013-10-02-m7.md absPath of file >>> MarkdownRemark\",\"frontmatter\":{\"path\":null,\"title\":\"M7\",\"date\":\"2013-10-02\",\"readableDate\":\"02 October 2013\",\"redirectFrom\":null,\"excerpt\":null,\"excerptQuote\":null},\"fields\":{\"path\":\"/2013/10/m7/\",\"slug\":\"/2013/10/m7/\"},\"html\":\"<p><a href=\\\"http://9to5mac.com/2013/09/29/more-m7-details-data-storage-battery-life-android-motion-coprocessor-adoption/\\\">9to5Mac</a> (emphasis mine):</p>\\n<blockquote>\\n<p>For pre-iPhone 5s devices, ARGUS usually drains about 20-30% of battery life per day while running in the background. The app continually checks for motion and calculates the distance and number of steps using the accelerometer and GPS. With the M7, however, the app does not need to be running in order to keep track of the number of steps – all of that data is tracked by the M7. <strong>As such, ARGUS no longer takes up any battery power while running in the background and the stated battery life from Apple – 10 hours 3G talk time, 250 hours of standby – will stay exactly the same</strong>. […]</p>\\n<p>The M7 APIs allow developers to query information about the user’s current transportation status (whether they’re in a car, walking, not moving, etc.).</p>\\n</blockquote>\\n<p>If this is true, it's impressive.</p>\\n<p>I hope that the use of the M7 will expand outside of the fitness and health apps.</p>\"}},{\"node\":{\"id\":\"/Users/ashen/Code/solarsailer.net/content/posts/2013-09-30-paying-for-softwares.md absPath of file >>> MarkdownRemark\",\"frontmatter\":{\"path\":null,\"title\":\"Paying for softwares\",\"date\":\"2013-09-30\",\"readableDate\":\"30 September 2013\",\"redirectFrom\":null,\"excerpt\":null,\"excerptQuote\":{\"name\":\"Florian Kugler\",\"quote\":\"[People] might say otherwise when asked about, but their actions speak pretty clearly: A cup of coffee is worth more than almost every app on the store. That's a hard pill to swallow, but we should let it sink in. We pour all our creativity, time, and passion into creating basically worthless products.\"}},\"fields\":{\"path\":\"/2013/09/paying-for-softwares/\",\"slug\":\"/2013/09/paying-for-softwares/\"},\"html\":\"<p>Florian Kugler about mobile apps in <a href=\\\"http://floriankugler.com/blog/2013/9/30/worth-less-than-a-cup-of-coffee\\\">Worth Less than a Cup of Coffee</a>:</p>\\n<blockquote>\\n<p>[People] might say otherwise when asked about, but their actions speak pretty clearly: A cup of coffee is worth more than almost every app on the store.</p>\\n<p>That's a hard pill to swallow, but we should let it sink in. We pour all our creativity, time, and passion into creating basically worthless products.</p>\\n</blockquote>\\n<p>Recent events and the backlash <a href=\\\"http://realmacsoftware.com/blog/some-changes-for-clear\\\">against Realmac with Clear for iOS 7</a> are sad.</p>\\n<p>People don't understand that creating softwares — <strong>truly</strong> good softwares that sweat every detail — takes a lot of time and money. Ironically, even a lot of developers who work in big companies don't want to pay for softwares.</p>\\n<p>The mobile apps markets have made this situation worse.</p>\\n<p>I'm currently thinking back about the mobile market, especially for games. At a time, I thought that going mobile-only was the best shot today, but the more I think about it, the more I'm realizing that a platform like Steam (which also drives the prices to the bottom, alas) is more sustainable for a developer/company.</p>\\n<p><a href=\\\"http://www.marco.org/2013/09/28/underscore-price-dynamics\\\">Marco Arment</a> said in its latest blog post: <em>\\\"Paid-up-front iOS apps had a great run, but it’s over. Time to make other plans.\\\"</em>.</p>\\n<p>So what does that leave? Freemium? Unfortunately, freemium almost always goes with <a href=\\\"https://itunes.apple.com/fr/app/candy-crush-saga/id553834731?mt=8\\\">bad apps or games that trick users to pay for more</a>.</p>\\n<p>N.B.: To be clear, as a user, I'm happy to <em>pay less</em>. For almost everybody, a software or a game at 50-100$ is way too high, and that's fine. What I don't like is that we are now in a situation where  even one buck for an app you use daily is too much. <strong>One buck per app cannot sustain a one-person business.</strong></p>\"}},{\"node\":{\"id\":\"/Users/ashen/Code/solarsailer.net/content/posts/2013-09-17-patent-trolls.md absPath of file >>> MarkdownRemark\",\"frontmatter\":{\"path\":null,\"title\":\"Patent trolls\",\"date\":\"2013-09-17\",\"readableDate\":\"17 September 2013\",\"redirectFrom\":null,\"excerpt\":\"I'm not against patents and inventors' rights. But there is a big difference between protecting your properties from real thieves and suing everyone without actually creating anything. If the only solution to this problem is to abolish the patents system, so be it.\",\"excerptQuote\":null},\"fields\":{\"path\":\"/2013/09/patent-trolls/\",\"slug\":\"/2013/09/patent-trolls/\"},\"html\":\"<p><a href=\\\"http://arstechnica.com/tech-policy/2013/09/angry-entrepreneur-replies-to-patent-troll-with-racketeering-lawsuit/\\\">Angry entrepreneur replies to patent troll with racketeering lawsuit</a>:</p>\\n<blockquote>\\n<p>\\\"There's a lot of outrageous stories, but everyone's so damn afraid of coming forward—It's like going against the Mafia,\\\" he said. But the idea that trolls may retaliate against those who speak out is overblown, he thinks. \\\"If they want to try to teach me a lesson, go for it. This will be my retirement. I'll fight them.\\\"</p>\\n</blockquote>\\n<p>Here it is:</p>\\n<ul>\\n<li>Everyone knows that patent trolls are useless companies that only try to steal money from defenseless ones.</li>\\n<li>Everyone knows that they don't invent anything.</li>\\n<li>Everyone knows that they cost a lot — of time and money — with endless legal procedures.</li>\\n<li>Everyone knows that it's pure bullshit and extortion, and yet, it is perfectly legal.</li>\\n</ul>\\n<p>Stupid system.</p>\\n<hr>\\n<p>I'm not against patents and inventors' rights. But there is a big difference between protecting your properties from real thieves and suing everyone without actually creating anything.</p>\\n<p>However, if the only solution to this problem is to abolish the patents system, so be it.</p>\"}}],\"pathPrefix\":\"articles\",\"first\":false,\"last\":false,\"index\":4,\"pageCount\":9,\"additionalContext\":{}}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---articles-4-d2b70bb14bd64c64a9ae.js","module.exports = {\"pathContext\":{\"group\":[{\"node\":{\"id\":\"/Users/ashen/Code/solarsailer.net/content/posts/2014-02-05-origami-quartz-composer.md absPath of file >>> MarkdownRemark\",\"frontmatter\":{\"path\":null,\"title\":\"Interaction prototyping with Origami\",\"date\":\"2014-02-05\",\"readableDate\":\"05 February 2014\",\"redirectFrom\":null,\"excerpt\":null,\"excerptQuote\":{\"name\":\"Facebook\",\"quote\":\"Origami provides a set of tools for Quartz Composer that make interaction prototyping a lot easier.\"}},\"fields\":{\"path\":\"/2014/02/origami-quartz-composer/\",\"slug\":\"/2014/02/origami-quartz-composer/\"},\"html\":\"<p><a href=\\\"http://facebook.github.io/origami/\\\">Origami</a> is a plugin for <a href=\\\"http://en.wikipedia.org/wiki/Quartz_Composer\\\">Quartz Composer</a>, developed by Facebook.</p>\\n<p><img src=\\\"/images/posts/2014-02-05-origami.jpg\\\" alt=\\\"Origami\\\"></p>\\n<p>Initially, Quartz Composer is a “visual programming” environment to create animated scenes.</p>\\n<p>But recently, <a href=\\\"https://medium.com/the-year-of-the-looking-glass/af182add5a2f\\\">some designers</a> have started to use it to mockup animations and interactions.</p>\\n<p>Because the primary goal of Quartz Composer is to create motion graphics, it makes sense to use it for interaction prototyping. The problem is that there isn't a lot of patches (a patch is like an instance of a class in a classic object-oriented programming language) dedicated to user interface in Quartz Composer.</p>\\n<p>That's where Origami steps in:</p>\\n<blockquote>\\n<p>Origami provides a set of tools for Quartz Composer that make interaction prototyping a lot easier.</p>\\n<p>Animations, transitions, buttons, layers, phones, etc.</p>\\n</blockquote>\\n<p>I recommend to watch <a href=\\\"https://vimeo.com/85578380\\\">this video</a> to get a brief overview of what is possible with Origami. It's intriguing, it looks promising and it motivates me to learn Quartz Composer more seriously.</p>\"}},{\"node\":{\"id\":\"/Users/ashen/Code/solarsailer.net/content/posts/2014-01-07-how-netflix-reverse-engineered-hollywood.md absPath of file >>> MarkdownRemark\",\"frontmatter\":{\"path\":null,\"title\":\"How Netflix Reverse Engineered Hollywood\",\"date\":\"2014-01-07\",\"readableDate\":\"07 January 2014\",\"redirectFrom\":null,\"excerpt\":null,\"excerptQuote\":{\"name\":\"Alexis Madrigal\",\"quote\":\"We discovered that Netflix possesses not several hundred genres, or even several thousand, but 76,897 unique ways to describe types of movies.\"}},\"fields\":{\"path\":\"/2014/01/how-netflix-reverse-engineered-hollywood/\",\"slug\":\"/2014/01/how-netflix-reverse-engineered-hollywood/\"},\"html\":\"<p><a href=\\\"http://www.theatlantic.com/technology/archive/2014/01/how-netflix-reverse-engineered-hollywood/282679/\\\">Alexis Madrigal on Netflix classification</a> (emphasis mine):</p>\\n<blockquote>\\n<p>[…], we discovered that Netflix possesses not several hundred genres, or even several thousand, <strong>but 76,897 unique ways to describe types of movies</strong>. […]</p>\\n<p>Using large teams of people specially trained to watch movies, Netflix deconstructed Hollywood. They paid people to watch films and tag them with all kinds of metadata. This process is so sophisticated and precise that taggers receive a 36-page training document that teaches them how to rate movies on their sexually suggestive content, goriness, romance levels, and even narrative elements like plot conclusiveness. […]</p>\\n<p>The Netflix Quantum Theory doc spelled out ways of tagging movie endings, the \\\"social acceptability\\\" of lead characters, and dozens of other facets of a movie. Many values are \\\"scalar,\\\" that is to say, they go from 1 to 5. So, every movie gets a romance rating, not just the ones labeled \\\"romantic\\\" in the personalized genres. Every movie's ending is rated from happy to sad, passing through ambiguous. Every plot is tagged. Lead characters' jobs are tagged. Movie locations are tagged. Everything. Everyone.</p>\\n<p>That's the data at the base of the pyramid. It is the basis for creating all the altgenres that I scraped. Netflix's engineers took the microtags and created a syntax for the genres, much of which we were able to reproduce in our generator.</p>\\n</blockquote>\\n<p>This article completely blew my mind. Great journalism.</p>\\n<p>The idea to tag any movie that much and create ultra-specific subgenres is so clever. Hell of a work too.</p>\\n<hr>\\n<p>Concerning the <em>Perry Mason</em> mystery, I found an interesting <a href=\\\"http://www.theatlantic.com/technology/archive/2014/01/how-netflix-reverse-engineered-hollywood/282679/#comment-1184453715\\\">explanation</a> in the comments (yep):</p>\\n<blockquote>\\n<p>Actually, Alexis, I am baffled by your conclusion that the Perry Mason Mystery is a \\\"ghost in the machine\\\".</p>\\n<p>To me it seems obvious: there is a subgenre, \\\"Understated Cerebral Mysteries with Ironclad Plots, Good Dialogue, Not Much Action or Romance, and on the Side of the Defense\\\", that is popular with viewers yet <em>drastically</em> underpopulated. It's so drastically underpopulated that the show that's a best-fit for the category is <em>enormously</em> popular, much more popular than anyone realized.</p>\\n<p>Far from being a \\\"bug\\\", this is programming <em>platinum</em> for Netflix. If they're as smart as I think they are, this is the subgenre where they should be looking to make a TV series. The biggest problem will be finding a showrunner and scriptwriters who are able to go against so many of Hollywood's cliches and assumptions. They need to make something where what is visually interesting, striking, or exciting is unimportant, but where there are no holes in the plots. Very high degree of difficulty, and only profitable to Netflix, which makes money from its shows, not from the advertising.</p>\\n</blockquote>\\n<p>Sounds a bit like <a href=\\\"http://www.imdb.com/title/tt1475582/?ref_=fn_al_tt_1\\\">Sherlock</a>, no?</p>\"}},{\"node\":{\"id\":\"/Users/ashen/Code/solarsailer.net/content/posts/2013-11-21-unity-2d-tutorial.md absPath of file >>> MarkdownRemark\",\"frontmatter\":{\"path\":null,\"title\":\"Pixelnest — Unity 2D tutorial\",\"date\":\"2013-11-21\",\"readableDate\":\"21 November 2013\",\"redirectFrom\":null,\"excerpt\":\"We cooked a complete tutorial about Unity and its new 2D tools. This tutorial covers the creation of a very small game from start to finish.\",\"excerptQuote\":null},\"fields\":{\"path\":\"/2013/11/unity-2d-tutorial/\",\"slug\":\"/2013/11/unity-2d-tutorial/\"},\"html\":\"<p>During the last weeks, we (<a href=\\\"http://dmayance.com/\\\">Damien</a> and I) have cooked a complete tutorial about Unity and its new 2D tools. This tutorial covers the creation of a very small game from start to finish.</p>\\n<p>We hope you will enjoy it.</p>\\n<p>→ <a href=\\\"http://pixelnest.io/tutorials/2d-game-unity/\\\">You can read it here</a>.</p>\"}},{\"node\":{\"id\":\"/Users/ashen/Code/solarsailer.net/content/posts/2013-10-23-below.md absPath of file >>> MarkdownRemark\",\"frontmatter\":{\"path\":null,\"title\":\"Below\",\"date\":\"2013-10-23\",\"readableDate\":\"23 October 2013\",\"redirectFrom\":null,\"excerpt\":null,\"excerptQuote\":null},\"fields\":{\"path\":\"/2013/10/below/\",\"slug\":\"/2013/10/below/\"},\"html\":\"<p><img src=\\\"/images/posts/2013-10-23-below.jpg\\\" alt=\\\"Below\\\"></p>\\n<p>It looks (and sounds) gorgeous. And it's made by Capy, which is arguably one of the best video game studios out there.</p>\\n<p>→ <a href=\\\"http://whatliesbelow.com/\\\">What Lies Below</a>.</p>\"}},{\"node\":{\"id\":\"/Users/ashen/Code/solarsailer.net/content/posts/2013-10-22-how-designers-destroyed-the-world.md absPath of file >>> MarkdownRemark\",\"frontmatter\":{\"path\":null,\"title\":\"How Designers Destroyed The World\",\"date\":\"2013-10-22\",\"readableDate\":\"22 October 2013\",\"redirectFrom\":null,\"excerpt\":null,\"excerptQuote\":{\"name\":\"Mike Monteiro\",\"quote\":\"There are professions more harmful than (industrial) design, but only a very few of them.\"}},\"fields\":{\"path\":\"/2013/10/how-designers-destroyed-the-world/\",\"slug\":\"/2013/10/how-designers-destroyed-the-world/\"},\"html\":\"<p>Better late than never; I've managed to watch <a href=\\\"https://vimeo.com/68470326\\\">How Designers Destroyed The World</a> by Mike Monteiro.</p>\\n<p>It's a great talk except that I'm not fond of the tone. Though it fits well with the content, I find it a bit overdramatic. The end is also a tad lengthy, which is unfortunate.</p>\\n<p>Otherwise, I liked what I heard. <em>Which makes me consider…</em></p>\\n<p>Regularly, I find myself stuck with incredibly ill-conceived things that frustrate me. These objects, rules or designs are things as simple as an ATM, a software or a door. They make us loose time, or worse, do (severe) mistakes.</p>\\n<p>For example: there is a crossroad near my parents house. A few years ago, the mayor decided to remove the road signs at this place AND to not replace it. In France, there is an implicit rule which states that when there are no signs, you have to let the cars at your right cross the junction first. This rule is stupid. <strong>When you drive, you have no time to doubt</strong>. A sign serves primarily as way to convey a danger or a rule, without making you think. You know what you have to do instantly. <em>If you see a stop sign, you stop</em>. That is all.</p>\\n<p>This implicit rule makes us do the contrary. At a junction like the one I talked about before, you see nothing, so you have to think, analyze and react. It's easy to have a (minor) car accident there. Moreover, people of my town had used this junction for years, knowing precisely how to react. But now, the priority rule has changed, and it's a mess. The result? In the best case, everybody stop, wait for 10 seconds to analyze the place and then drive.</p>\\n<p><strong>This is a result of a design decision. Someone decided to do that.</strong> In this case, someone decided to break something that worked well for all this time.</p>\\n<p>Sometimes, it might just be a dumb design that put you in an embarrassing situation. If you are a man, just remember the last time you have used a flat and too-high urinal. :)</p>\\n<p>When I talk about that with some of my friends, they think that I'm excessively demanding and that the problem is me. Perhaps.</p>\\n<p>I will conclude with a quote from the talk:</p>\\n<blockquote>\\n<p>There are professions more harmful than (industrial) design, <strong>but only a very few of them.</strong></p>\\n<p>— Victor Papanek <em>(modified by Mike Monteiro)</em></p>\\n</blockquote>\"}},{\"node\":{\"id\":\"/Users/ashen/Code/solarsailer.net/content/posts/2013-10-18-you-must-prototype-it-in-code.md absPath of file >>> MarkdownRemark\",\"frontmatter\":{\"path\":null,\"title\":\"You must prototype it in code\",\"date\":\"2013-10-18\",\"readableDate\":\"18 October 2013\",\"redirectFrom\":null,\"excerpt\":null,\"excerptQuote\":{\"name\":\"Jeff Atwood\",\"quote\":\"The most destructive symptom of over-planning is the wrongheaded idea that being a Software Architect™ means drawing a lot of UML diagrams and handing them off to a group of developers. […] You can't architect a real world application on a whiteboard. You must prototype it in code to gather data on the performance and design implications of the choices you are making.\"}},\"fields\":{\"path\":\"/2013/10/you-must-prototype-it-in-code/\",\"slug\":\"/2013/10/you-must-prototype-it-in-code/\"},\"html\":\"<p>Jeff Atwood in <a href=\\\"http://www.codinghorror.com/blog/2004/11/good-programmers-get-off-their-butts.html\\\">Good Programmers Get Off Their Butts</a>:</p>\\n<blockquote>\\n<p>I am not proposing a code-like-hell methodology. I am merely observing that, in my experience, <strong>coding without planning is just as futile as coding with too much planning</strong>. Software development is <a href=\\\"http://www.codinghorror.com/blog/archives/000071.html\\\">a wicked problem</a>; you should never make planning decisions without some kind of code prototype to ensure that you're making informed decisions. If you plan too far ahead of the code, I guarantee you are doing work that will be thrown away or altered until it is unrecognizable.</p>\\n<p>The most destructive symptom of over-planning is the wrongheaded idea that being a Software Architect™ means drawing a lot of UML diagrams and handing them off to a group of developers in Bangalore. <strong>UML is great if you don't want to do any work; you just draw pictures of what it would look like if work was actually done</strong>. This is not only borderline laziness, it's also a recipe for disaster. You can't architect a real world application on a whiteboard. You must prototype it in code to gather data on the performance and design implications of the choices you are making.</p>\\n</blockquote>\"}},{\"node\":{\"id\":\"/Users/ashen/Code/solarsailer.net/content/posts/2013-10-02-m7.md absPath of file >>> MarkdownRemark\",\"frontmatter\":{\"path\":null,\"title\":\"M7\",\"date\":\"2013-10-02\",\"readableDate\":\"02 October 2013\",\"redirectFrom\":null,\"excerpt\":null,\"excerptQuote\":null},\"fields\":{\"path\":\"/2013/10/m7/\",\"slug\":\"/2013/10/m7/\"},\"html\":\"<p><a href=\\\"http://9to5mac.com/2013/09/29/more-m7-details-data-storage-battery-life-android-motion-coprocessor-adoption/\\\">9to5Mac</a> (emphasis mine):</p>\\n<blockquote>\\n<p>For pre-iPhone 5s devices, ARGUS usually drains about 20-30% of battery life per day while running in the background. The app continually checks for motion and calculates the distance and number of steps using the accelerometer and GPS. With the M7, however, the app does not need to be running in order to keep track of the number of steps – all of that data is tracked by the M7. <strong>As such, ARGUS no longer takes up any battery power while running in the background and the stated battery life from Apple – 10 hours 3G talk time, 250 hours of standby – will stay exactly the same</strong>. […]</p>\\n<p>The M7 APIs allow developers to query information about the user’s current transportation status (whether they’re in a car, walking, not moving, etc.).</p>\\n</blockquote>\\n<p>If this is true, it's impressive.</p>\\n<p>I hope that the use of the M7 will expand outside of the fitness and health apps.</p>\"}},{\"node\":{\"id\":\"/Users/ashen/Code/solarsailer.net/content/posts/2013-09-30-paying-for-softwares.md absPath of file >>> MarkdownRemark\",\"frontmatter\":{\"path\":null,\"title\":\"Paying for softwares\",\"date\":\"2013-09-30\",\"readableDate\":\"30 September 2013\",\"redirectFrom\":null,\"excerpt\":null,\"excerptQuote\":{\"name\":\"Florian Kugler\",\"quote\":\"[People] might say otherwise when asked about, but their actions speak pretty clearly: A cup of coffee is worth more than almost every app on the store. That's a hard pill to swallow, but we should let it sink in. We pour all our creativity, time, and passion into creating basically worthless products.\"}},\"fields\":{\"path\":\"/2013/09/paying-for-softwares/\",\"slug\":\"/2013/09/paying-for-softwares/\"},\"html\":\"<p>Florian Kugler about mobile apps in <a href=\\\"http://floriankugler.com/blog/2013/9/30/worth-less-than-a-cup-of-coffee\\\">Worth Less than a Cup of Coffee</a>:</p>\\n<blockquote>\\n<p>[People] might say otherwise when asked about, but their actions speak pretty clearly: A cup of coffee is worth more than almost every app on the store.</p>\\n<p>That's a hard pill to swallow, but we should let it sink in. We pour all our creativity, time, and passion into creating basically worthless products.</p>\\n</blockquote>\\n<p>Recent events and the backlash <a href=\\\"http://realmacsoftware.com/blog/some-changes-for-clear\\\">against Realmac with Clear for iOS 7</a> are sad.</p>\\n<p>People don't understand that creating softwares — <strong>truly</strong> good softwares that sweat every detail — takes a lot of time and money. Ironically, even a lot of developers who work in big companies don't want to pay for softwares.</p>\\n<p>The mobile apps markets have made this situation worse.</p>\\n<p>I'm currently thinking back about the mobile market, especially for games. At a time, I thought that going mobile-only was the best shot today, but the more I think about it, the more I'm realizing that a platform like Steam (which also drives the prices to the bottom, alas) is more sustainable for a developer/company.</p>\\n<p><a href=\\\"http://www.marco.org/2013/09/28/underscore-price-dynamics\\\">Marco Arment</a> said in its latest blog post: <em>\\\"Paid-up-front iOS apps had a great run, but it’s over. Time to make other plans.\\\"</em>.</p>\\n<p>So what does that leave? Freemium? Unfortunately, freemium almost always goes with <a href=\\\"https://itunes.apple.com/fr/app/candy-crush-saga/id553834731?mt=8\\\">bad apps or games that trick users to pay for more</a>.</p>\\n<p>N.B.: To be clear, as a user, I'm happy to <em>pay less</em>. For almost everybody, a software or a game at 50-100$ is way too high, and that's fine. What I don't like is that we are now in a situation where  even one buck for an app you use daily is too much. <strong>One buck per app cannot sustain a one-person business.</strong></p>\"}},{\"node\":{\"id\":\"/Users/ashen/Code/solarsailer.net/content/posts/2013-09-17-patent-trolls.md absPath of file >>> MarkdownRemark\",\"frontmatter\":{\"path\":null,\"title\":\"Patent trolls\",\"date\":\"2013-09-17\",\"readableDate\":\"17 September 2013\",\"redirectFrom\":null,\"excerpt\":\"I'm not against patents and inventors' rights. But there is a big difference between protecting your properties from real thieves and suing everyone without actually creating anything. If the only solution to this problem is to abolish the patents system, so be it.\",\"excerptQuote\":null},\"fields\":{\"path\":\"/2013/09/patent-trolls/\",\"slug\":\"/2013/09/patent-trolls/\"},\"html\":\"<p><a href=\\\"http://arstechnica.com/tech-policy/2013/09/angry-entrepreneur-replies-to-patent-troll-with-racketeering-lawsuit/\\\">Angry entrepreneur replies to patent troll with racketeering lawsuit</a>:</p>\\n<blockquote>\\n<p>\\\"There's a lot of outrageous stories, but everyone's so damn afraid of coming forward—It's like going against the Mafia,\\\" he said. But the idea that trolls may retaliate against those who speak out is overblown, he thinks. \\\"If they want to try to teach me a lesson, go for it. This will be my retirement. I'll fight them.\\\"</p>\\n</blockquote>\\n<p>Here it is:</p>\\n<ul>\\n<li>Everyone knows that patent trolls are useless companies that only try to steal money from defenseless ones.</li>\\n<li>Everyone knows that they don't invent anything.</li>\\n<li>Everyone knows that they cost a lot — of time and money — with endless legal procedures.</li>\\n<li>Everyone knows that it's pure bullshit and extortion, and yet, it is perfectly legal.</li>\\n</ul>\\n<p>Stupid system.</p>\\n<hr>\\n<p>I'm not against patents and inventors' rights. But there is a big difference between protecting your properties from real thieves and suing everyone without actually creating anything.</p>\\n<p>However, if the only solution to this problem is to abolish the patents system, so be it.</p>\"}}],\"pathPrefix\":\"articles\",\"first\":false,\"last\":false,\"index\":4,\"pageCount\":9,\"additionalContext\":{}}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/articles-4.json\n// module id = 788\n// module chunks = 213449887146903"],"sourceRoot":""}