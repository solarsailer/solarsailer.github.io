{"version":3,"sources":["webpack:///./src/components/PaginationController.js","webpack:///./src/components/templates/PaginationTemplate.js","webpack:///./src/components/PostRecap.js"],"names":["BUTTON_CSS_EXTENSION","css","Container","styled","div","PaginationButtonNormal","ButtonSmall","PaginationDisabledButton","DisabledButtonSmall","PaginationButton","url","children","isTextOnly","isFirstPage","isLastPage","previousUrl","nextUrl","createGridItems","items","map","node","Item","key","id","PostRecap","fields","path","title","frontmatter","date","readableDate","excerpt","excerptQuote","showReadMoreHintInHeader","Pagination","Posts","ul","Grid","MainItem","li","pageContext","group","index","first","last","previous","toString","next","content","splitAt","main","slice","rest","Post","html","divideContent","Helmet","PageTitle","PaginationController","length","BlockLink","Link","Wrapper","Article","article","Header","header","Content","Title","h2","Date","p","Excerpt","ExcerptQuote","em","ReadMore","className","dangerouslySetInnerHTML","__html","hasNoContent","to","name","quote"],"mappings":"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","file":"component---src-components-templates-pagination-template-js-98a0a6f71bc9dc749e44.js","sourcesContent":["import React from 'react'\nimport styled, {css} from 'styled-components'\n\nimport {ButtonSmall, DisabledButtonSmall} from './Button'\n\n// -------------------------------------------------------------\n// Constants.\n// -------------------------------------------------------------\n\nconst PAGINATION_BORDER = 'hsla(0, 0%, 0%, 0.1)'\n\nconst BUTTON_CSS_EXTENSION = css`\n  display: inline-block;\n  width: 150px;\n  border-radius: 0;\n\n  &:first-child {\n    border-right: 2px solid ${PAGINATION_BORDER};\n    border-top-left-radius: 5px;\n    border-bottom-left-radius: 5px;\n  }\n\n  &:last-child {\n    border-left: 2px solid ${PAGINATION_BORDER};\n    border-top-right-radius: 5px;\n    border-bottom-right-radius: 5px;\n  }\n`\n\n// -------------------------------------------------------------\n// Components.\n// -------------------------------------------------------------\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  @media (max-width: 400px) {\n    font-size: 0.8em;\n\n    /* Hack… I would like to know if it's possible\n     * to get a styled-components class to prevent that.\n     *\n     * But well, increase the padding to make bigger buttons on mobiles.\n     */\n    a,\n    span {\n      padding-top: 0.75rem;\n      padding-bottom: 0.75rem;\n    }\n  }\n`\n\nconst PaginationButtonNormal = styled(ButtonSmall)`\n  ${BUTTON_CSS_EXTENSION};\n`\n\nconst PaginationDisabledButton = styled(DisabledButtonSmall)`\n  ${BUTTON_CSS_EXTENSION};\n`\n\nconst PaginationButton = ({url, children, isTextOnly}) => {\n  if (isTextOnly) {\n    return <PaginationDisabledButton>{children}</PaginationDisabledButton>\n  } else {\n    return <PaginationButtonNormal url={url}>{children}</PaginationButtonNormal>\n  }\n}\n\n// -------------------------------------------------------------\n// Default.\n// -------------------------------------------------------------\n\nexport default ({isFirstPage, isLastPage, previousUrl, nextUrl}) => {\n  return (\n    <Container>\n      <PaginationButton\n        isTextOnly={isFirstPage}\n        url={`/articles/${previousUrl}`}\n      >\n        ←{'\\u00A0'}Previous\n      </PaginationButton>\n\n      <PaginationButton url=\"/archive/\">Archive</PaginationButton>\n\n      <PaginationButton isTextOnly={isLastPage} url={`/articles/${nextUrl}`}>\n        Next{'\\u00A0'}→\n      </PaginationButton>\n    </Container>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport {Helmet} from 'react-helmet'\n\nimport Layout from '../layouts/PageLayout'\nimport Post from '../Post'\nimport PostRecap from '../PostRecap'\nimport PageTitle from '../PageTitle'\nimport PaginationController from '../PaginationController'\n\n// -------------------------------------------------------------\n// Functions.\n// -------------------------------------------------------------\n\nfunction createGridItems(items) {\n  return items.map(({node}) => (\n    <Item key={node.id}>\n      <PostRecap\n        url={node.fields.path}\n        title={node.frontmatter.title}\n        date={node.frontmatter.readableDate}\n        excerpt={node.frontmatter.excerpt}\n        excerptQuote={node.frontmatter.excerptQuote}\n        showReadMoreHintInHeader\n      />\n    </Item>\n  ))\n}\n\nfunction divideContent(items, {isFirstPage, splitAt}) {\n  if (isFirstPage) {\n    const main = items.slice(0, splitAt)\n    const rest = items.slice(splitAt)\n\n    return (\n      <>\n        <Posts>\n          {main.map(({node}) => (\n            <MainItem key={node.id}>\n              <Post\n                url={node.fields.path}\n                title={node.frontmatter.title}\n                date={node.frontmatter.readableDate}\n                content={node.html}\n              />\n            </MainItem>\n          ))}\n        </Posts>\n        <Grid>{createGridItems(rest)}</Grid>\n      </>\n    )\n  }\n\n  return <Grid>{createGridItems(items)}</Grid>\n}\n\n// -------------------------------------------------------------\n// Components.\n// -------------------------------------------------------------\n\nconst Pagination = styled.div`\n  padding: 5rem 0;\n`\n\nconst Posts = styled.ul``\n\nconst Grid = styled.ul`\n  margin-bottom: 0;\n`\n\nconst MainItem = styled.li`\n  margin-bottom: 4rem;\n`\n\nconst Item = styled.li`\n  margin-bottom: 2rem;\n`\n\n// -------------------------------------------------------------\n// Export.\n// -------------------------------------------------------------\n\nexport default ({pageContext}) => {\n  // Grab {pageCount} if needed.\n  const {group, index, first, last} = pageContext\n\n  const previous = index - 1 === 1 ? '' : (index - 1).toString()\n  const next = (index + 1).toString()\n\n  const content = divideContent(group, {isFirstPage: first, splitAt: 3})\n\n  return (\n    <Layout>\n      <Helmet>\n        <title>Articles — Matthieu Oger</title>\n      </Helmet>\n\n      <PageTitle url=\"/articles/\">Articles</PageTitle>\n\n      <PaginationController\n        previousUrl={previous}\n        nextUrl={next}\n        isFirstPage={first}\n        isLastPage={last}\n      />\n\n      <Pagination>{content}</Pagination>\n\n      {group.length > 3 && (\n        <PaginationController\n          previousUrl={previous}\n          nextUrl={next}\n          isFirstPage={first}\n          isLastPage={last}\n        />\n      )}\n    </Layout>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport {Link} from 'gatsby'\n\n// -------------------------------------------------------------\n// Constants.\n// -------------------------------------------------------------\n\nconst TRANSITION = 'all 0.2s ease-out'\nconst READ_MORE_CLASS = 'read-more-hint'\nconst READ_MORE_CONTENT = '→&nbsp;Read&nbsp;More'\n\n// -------------------------------------------------------------\n// Components.\n// -------------------------------------------------------------\n\nconst BlockLink = styled(Link)`\n  display: block;\n  color: inherit;\n  text-decoration: none;\n\n  .read-more-hint {\n    color: var(--color-accent);\n    font-size: 1.1rem;\n    font-style: italic;\n    font-weight: normal;\n  }\n`\n\n// We use a wrapper to create a shadow with a ::before pseudo-element.\n// This allows us to create a shadow smaller than the box of the actual element.\n// The shadow is more distant and subtle.\n\nconst Wrapper = styled.div`\n  position: relative;\n  z-index: 1;\n\n  will-change: transform;\n  transition: ${TRANSITION};\n  transition-property: transform;\n\n  &:hover {\n    transform: translateY(-5px);\n  }\n`\n\nconst Article = styled.article`\n  padding: 2rem;\n\n  background: white;\n  border: 1px solid hsla(0, 0%, 0%, 0.05);\n  border-radius: 3px;\n\n  transition: ${TRANSITION};\n  transition-property: color, background-color;\n\n  &::before,\n  &::after {\n    content: '';\n\n    display: block;\n\n    position: absolute;\n    z-index: -1;\n\n    top: 2rem;\n    bottom: 1rem;\n    left: 1rem;\n    right: 1rem;\n\n    box-shadow: 0 20px 30px hsla(0, 0%, 0%, 0.1);\n\n    transition: ${TRANSITION};\n    transition-property: opacity;\n  }\n\n  &::after {\n    left: 0;\n    right: 0;\n\n    box-shadow: 0 20px 40px hsla(0, 0%, 0%, 0.4);\n\n    opacity: 0;\n  }\n\n  &:hover {\n    color: white;\n    background: var(--color-accent);\n\n    /* Swap between ::before and ::after pseudo.\n     * Its gives more fps than transitioning the shadow/left/right directly.\n     */\n    &::before {\n      opacity: 0;\n    }\n\n    &::after {\n      opacity: 1;\n    }\n  }\n`\n\nconst Header = styled.header`\n  line-height: normal;\n`\n\nconst Content = styled.div`\n  margin-top: 2rem;\n\n  > :last-child {\n    margin-bottom: 0;\n  }\n`\n\nconst Title = styled.h2`\n  margin-bottom: 0.5rem;\n\n  font-size: 0.9em;\n  font-weight: 500;\n`\n\nconst Date = styled.p`\n  color: hsla(0, 0%, 0%, 0.5);\n\n  margin-bottom: 0;\n\n  font-size: 0.7em;\n  font-weight: 500;\n`\n\nconst Excerpt = styled.p`\n  font-size: 0.8em;\n`\n\n// -------------------------------------------------------------\n// Export.\n// -------------------------------------------------------------\n\nconst ExcerptQuote = styled.em`\n  opacity: 0.75;\n`\n\nconst ReadMore = () => (\n  <span\n    className={READ_MORE_CLASS}\n    dangerouslySetInnerHTML={{__html: READ_MORE_CONTENT}}\n  />\n)\n\nexport default ({\n  url,\n  title,\n  date,\n  excerpt,\n  excerptQuote,\n  showReadMoreHintInHeader = false\n}) => {\n  const hasNoContent = !excerpt && !excerptQuote\n\n  return (\n    <BlockLink to={url}>\n      <Wrapper>\n        <Article>\n          <Header>\n            <Title>{title}</Title>\n            <Date>\n              {date} {hasNoContent && showReadMoreHintInHeader && <ReadMore />}\n            </Date>\n          </Header>\n          {excerpt && (\n            <Content>\n              <Excerpt\n                dangerouslySetInnerHTML={{\n                  __html:\n                    excerpt +\n                    ` <span class=\"${READ_MORE_CLASS}\">${READ_MORE_CONTENT}</span>`\n                }}\n              />\n            </Content>\n          )}\n          {excerptQuote && (\n            <Content>\n              <Excerpt>\n                {excerptQuote.name}:{' '}\n                <ExcerptQuote>“{excerptQuote.quote}”</ExcerptQuote> <ReadMore />\n              </Excerpt>\n            </Content>\n          )}\n        </Article>\n      </Wrapper>\n    </BlockLink>\n  )\n}\n"],"sourceRoot":""}