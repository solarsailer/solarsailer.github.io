{"version":3,"sources":["webpack:///./src/components/HeaderRow.js","webpack:///./src/pages/archive.js","webpack:///./src/components/PostRecap.js"],"names":["Wrapper","styled","div","Header","header","Text","p","children","getYear","node","Date","frontmatter","date","getUTCFullYear","createHeaderRow","year","key","HeaderRow","convertAndAddHeaders","items","reduce","acc","x","i","push","id","PostRecap","url","fields","path","title","readableDate","List","ul","query","nodes","data","allMarkdownRemark","edges","map","Helmet","PageTitle","BlockLink","Link","Article","article","Content","Title","h2","Excerpt","ExcerptQuote","em","ReadMore","className","dangerouslySetInnerHTML","__html","excerpt","excerptQuote","showReadMoreHintInHeader","hasNoContent","to","name","quote"],"mappings":"uJAOMA,EAAUC,IAAOC,IAAV,yEAAGD,CAAH,kCAKPE,EAASF,IAAOG,OAAV,wEAAGH,CAAH,2PAwBNI,EAAOJ,IAAOK,EAAV,sEAAGL,CAAH,sHAgBK,cAAiB,IAAfM,EAAc,EAAdA,SACf,OACE,kBAACP,EAAD,KACE,kBAACG,EAAD,KACE,kBAACE,EAAD,KAAOE,M,SC1Cf,SAASC,EAAQC,GACf,OAAO,IAAIC,KAAKD,EAAKE,YAAYC,MAAMC,iBAezC,SAASC,EAAgBC,GACvB,OACE,wBAAIC,IAAG,sBAAwBD,GAC7B,kBAACE,EAAD,KAAYF,IAKlB,SAASG,EAAqBC,GAC5B,OAAOA,EAAMC,OAAO,SAACC,EAAKC,EAAGC,GAC3B,IAtBed,EAsBTM,EAAOP,EAAQc,GAGX,IAANC,EACFF,EAAIG,KAAKV,EAAgBC,IAOrBP,EAHiBW,EAAMI,EAAI,MAGDR,GAC5BM,EAAIG,KAAKV,EAAgBC,IAK7B,OADAM,EAAIG,MAtCWf,EAsCIa,EApCnB,wBAAIN,IAAKP,EAAKgB,IACZ,kBAACC,EAAA,EAAD,CACEC,IAAKlB,EAAKmB,OAAOC,KACjBC,MAAOrB,EAAKE,YAAYmB,MACxBlB,KAAMH,EAAKE,YAAYoB,kBAiCpBV,GACN,IA1DL,oCAiEA,IAAMW,EAAO/B,IAAOgC,GAAV,mEAAGhC,CAAH,sBAsBGiC,GAlBE,sBAAa,IACpBC,EADmB,EAAVC,KACIC,kBAAkBC,MAAMC,IAAI,SAAAjB,GAAC,OAAIA,EAAEb,OAEtD,OACE,kBAAC,IAAD,KACE,kBAAC+B,EAAA,OAAD,KACE,2DAEF,kBAACC,EAAA,EAAD,gBACA,kBAACT,EAAD,KAAOd,EAAqBiB,MAShB,c,0ECtEZO,EAAYzC,YAAO0C,KAAV,uEAAG1C,CAAH,wJAiBTD,EAAUC,IAAOC,IAAV,qEAAGD,CAAH,wIAzBM,qBAsCb2C,EAAU3C,IAAO4C,QAAV,qEAAG5C,CAAH,ogBAtCM,yCA8FbE,EAASF,IAAOG,OAAV,oEAAGH,CAAH,yBAIN6C,EAAU7C,IAAOC,IAAV,qEAAGD,CAAH,oDAQP8C,EAAQ9C,IAAO+C,GAAV,mEAAG/C,CAAH,2DAOLS,EAAOT,IAAOK,EAAV,kEAAGL,CAAH,8EASJgD,EAAUhD,IAAOK,EAAV,qEAAGL,CAAH,sBAQPiD,EAAejD,IAAOkD,GAAV,0EAAGlD,CAAH,mBAIZmD,EAAW,kBACf,0BACEC,UAvIoB,iBAwIpBC,wBAAyB,CAACC,OAvIJ,4BA2IX,gBAOR,IANL5B,EAMI,EANJA,IACAG,EAKI,EALJA,MACAlB,EAII,EAJJA,KACA4C,EAGI,EAHJA,QACAC,EAEI,EAFJA,aAEI,IADJC,gCACI,SACEC,GAAgBH,IAAYC,EAElC,OACE,kBAACf,EAAD,CAAWkB,GAAIjC,GACb,kBAAC3B,EAAD,KACE,kBAAC4C,EAAD,KACE,kBAACzC,EAAD,KACE,kBAAC4C,EAAD,KAAQjB,GACR,kBAACpB,EAAD,KACGE,EADH,IACU+C,GAAgBD,GAA4B,kBAACN,EAAD,QAGvDI,GACC,kBAACV,EAAD,KACE,kBAACG,EAAD,CACEK,wBAAyB,CACvBC,OACEC,EAAO,iEAMhBC,GACC,kBAACX,EAAD,KACE,kBAACG,EAAD,KACGQ,EAAaI,KADhB,IACuB,IACrB,kBAACX,EAAD,SAAgBO,EAAaK,MAA7B,KAFF,IAEsD,kBAACV,EAAD","file":"component---src-pages-archive-js-67d8b3224f58531fac1e.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\n// -------------------------------------------------------------\n// Components.\n// -------------------------------------------------------------\n\nconst Wrapper = styled.div`\n  position: relative;\n  z-index: 1;\n`\n\nconst Header = styled.header`\n  padding: 1rem 2rem;\n\n  background: hsl(0, 0%, 95%);\n  border: 1px solid hsla(0, 0%, 0%, 0.05);\n  border-radius: 3px;\n\n  &::before {\n    content: '';\n\n    display: block;\n\n    position: absolute;\n    z-index: -1;\n\n    top: 2rem;\n    bottom: 1rem;\n    left: 1rem;\n    right: 1rem;\n\n    box-shadow: 0 20px 30px hsla(0, 0%, 0%, 0.1);\n  }\n`\n\nconst Text = styled.p`\n  color: hsl(0, 0%, 53%);\n\n  margin-bottom: 0;\n\n  font-size: 0.9em;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  line-height: normal;\n`\n\n// -------------------------------------------------------------\n// Default.\n// -------------------------------------------------------------\n\nexport default ({children}) => {\n  return (\n    <Wrapper>\n      <Header>\n        <Text>{children}</Text>\n      </Header>\n    </Wrapper>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport {Helmet} from 'react-helmet'\nimport {graphql} from 'gatsby'\n\nimport Layout from '../components/layouts/PageLayout'\nimport PostRecap from '../components/PostRecap'\nimport HeaderRow from '../components/HeaderRow'\nimport PageTitle from '../components/PageTitle'\n\n// -------------------------------------------------------------\n// Functions.\n// -------------------------------------------------------------\n\nfunction getYear(node) {\n  return new Date(node.frontmatter.date).getUTCFullYear()\n}\n\nfunction createRow(node) {\n  return (\n    <li key={node.id}>\n      <PostRecap\n        url={node.fields.path}\n        title={node.frontmatter.title}\n        date={node.frontmatter.readableDate}\n      />\n    </li>\n  )\n}\n\nfunction createHeaderRow(year) {\n  return (\n    <li key={`archive-header-row-${year}`}>\n      <HeaderRow>{year}</HeaderRow>\n    </li>\n  )\n}\n\nfunction convertAndAddHeaders(items) {\n  return items.reduce((acc, x, i) => {\n    const year = getYear(x)\n\n    // If first row, just add the header directly.\n    if (i === 0) {\n      acc.push(createHeaderRow(year))\n    }\n    // Otherwise, check if the current year is different from the previous node.\n    else {\n      const previousItem = items[i - 1]\n\n      // Different? We have changed the year and we should add the header.\n      if (getYear(previousItem) !== year) {\n        acc.push(createHeaderRow(year))\n      }\n    }\n\n    acc.push(createRow(x))\n    return acc\n  }, [])\n}\n\n// -------------------------------------------------------------\n// Component.\n// -------------------------------------------------------------\n\nconst List = styled.ul`\n  margin-bottom: 0;\n`\n\nexport default ({data}) => {\n  const nodes = data.allMarkdownRemark.edges.map(x => x.node)\n\n  return (\n    <Layout>\n      <Helmet>\n        <title>Archive — Matthieu Oger</title>\n      </Helmet>\n      <PageTitle>Archive</PageTitle>\n      <List>{convertAndAddHeaders(nodes)}</List>\n    </Layout>\n  )\n}\n\n// -------------------------------------------------------------\n// Queries.\n// -------------------------------------------------------------\n\nexport const query = graphql`\n  {\n    allMarkdownRemark(sort: {order: DESC, fields: [frontmatter___date]}) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date\n            readableDate: date(formatString: \"DD MMMM YYYY\")\n          }\n          fields {\n            path\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport {Link} from 'gatsby'\n\n// -------------------------------------------------------------\n// Constants.\n// -------------------------------------------------------------\n\nconst TRANSITION = 'all 0.2s ease-out'\nconst READ_MORE_CLASS = 'read-more-hint'\nconst READ_MORE_CONTENT = '→&nbsp;Read&nbsp;More'\n\n// -------------------------------------------------------------\n// Components.\n// -------------------------------------------------------------\n\nconst BlockLink = styled(Link)`\n  display: block;\n  color: inherit;\n  text-decoration: none;\n\n  .read-more-hint {\n    color: var(--color-accent);\n    font-size: 1.1rem;\n    font-style: italic;\n    font-weight: normal;\n  }\n`\n\n// We use a wrapper to create a shadow with a ::before pseudo-element.\n// This allows us to create a shadow smaller than the box of the actual element.\n// The shadow is more distant and subtle.\n\nconst Wrapper = styled.div`\n  position: relative;\n  z-index: 1;\n\n  will-change: transform;\n  transition: ${TRANSITION};\n  transition-property: transform;\n\n  &:hover {\n    transform: translateY(-5px);\n  }\n`\n\nconst Article = styled.article`\n  padding: 2rem;\n\n  background: white;\n  border: 1px solid hsla(0, 0%, 0%, 0.05);\n  border-radius: 3px;\n\n  transition: ${TRANSITION};\n  transition-property: color, background-color;\n\n  &::before,\n  &::after {\n    content: '';\n\n    display: block;\n\n    position: absolute;\n    z-index: -1;\n\n    top: 2rem;\n    bottom: 1rem;\n    left: 1rem;\n    right: 1rem;\n\n    box-shadow: 0 20px 30px hsla(0, 0%, 0%, 0.1);\n\n    transition: ${TRANSITION};\n    transition-property: opacity;\n  }\n\n  &::after {\n    left: 0;\n    right: 0;\n\n    box-shadow: 0 20px 40px hsla(0, 0%, 0%, 0.4);\n\n    opacity: 0;\n  }\n\n  &:hover {\n    color: white;\n    background: var(--color-accent);\n\n    /* Swap between ::before and ::after pseudo.\n     * Its gives more fps than transitioning the shadow/left/right directly.\n     */\n    &::before {\n      opacity: 0;\n    }\n\n    &::after {\n      opacity: 1;\n    }\n  }\n`\n\nconst Header = styled.header`\n  line-height: normal;\n`\n\nconst Content = styled.div`\n  margin-top: 2rem;\n\n  > :last-child {\n    margin-bottom: 0;\n  }\n`\n\nconst Title = styled.h2`\n  margin-bottom: 0.5rem;\n\n  font-size: 0.9em;\n  font-weight: 500;\n`\n\nconst Date = styled.p`\n  color: hsla(0, 0%, 0%, 0.5);\n\n  margin-bottom: 0;\n\n  font-size: 0.7em;\n  font-weight: 500;\n`\n\nconst Excerpt = styled.p`\n  font-size: 0.8em;\n`\n\n// -------------------------------------------------------------\n// Export.\n// -------------------------------------------------------------\n\nconst ExcerptQuote = styled.em`\n  opacity: 0.75;\n`\n\nconst ReadMore = () => (\n  <span\n    className={READ_MORE_CLASS}\n    dangerouslySetInnerHTML={{__html: READ_MORE_CONTENT}}\n  />\n)\n\nexport default ({\n  url,\n  title,\n  date,\n  excerpt,\n  excerptQuote,\n  showReadMoreHintInHeader = false\n}) => {\n  const hasNoContent = !excerpt && !excerptQuote\n\n  return (\n    <BlockLink to={url}>\n      <Wrapper>\n        <Article>\n          <Header>\n            <Title>{title}</Title>\n            <Date>\n              {date} {hasNoContent && showReadMoreHintInHeader && <ReadMore />}\n            </Date>\n          </Header>\n          {excerpt && (\n            <Content>\n              <Excerpt\n                dangerouslySetInnerHTML={{\n                  __html:\n                    excerpt +\n                    ` <span class=\"${READ_MORE_CLASS}\">${READ_MORE_CONTENT}</span>`\n                }}\n              />\n            </Content>\n          )}\n          {excerptQuote && (\n            <Content>\n              <Excerpt>\n                {excerptQuote.name}:{' '}\n                <ExcerptQuote>“{excerptQuote.quote}”</ExcerptQuote> <ReadMore />\n              </Excerpt>\n            </Content>\n          )}\n        </Article>\n      </Wrapper>\n    </BlockLink>\n  )\n}\n"],"sourceRoot":""}